(set-logic QF_NRA_ODE)
(declare-fun y () Real [2.000000, 3.500000])
(declare-fun x () Real [0.000000, 2.000000])
(declare-fun vy () Real [-2.000000, 2.000000])
(declare-fun vx () Real [-2.000000, 2.000000])
(declare-fun y_0_0 () Real [2.000000, 3.500000])
(declare-fun y_0_t () Real [2.000000, 3.500000])
(declare-fun y_1_0 () Real [2.000000, 3.500000])
(declare-fun y_1_t () Real [2.000000, 3.500000])
(declare-fun y_2_0 () Real [2.000000, 3.500000])
(declare-fun y_2_t () Real [2.000000, 3.500000])
(declare-fun y_3_0 () Real [2.000000, 3.500000])
(declare-fun y_3_t () Real [2.000000, 3.500000])
(declare-fun x_0_0 () Real [0.000000, 2.000000])
(declare-fun x_0_t () Real [0.000000, 2.000000])
(declare-fun x_1_0 () Real [0.000000, 2.000000])
(declare-fun x_1_t () Real [0.000000, 2.000000])
(declare-fun x_2_0 () Real [0.000000, 2.000000])
(declare-fun x_2_t () Real [0.000000, 2.000000])
(declare-fun x_3_0 () Real [0.000000, 2.000000])
(declare-fun x_3_t () Real [0.000000, 2.000000])
(declare-fun vy_0_0 () Real [-2.000000, 2.000000])
(declare-fun vy_0_t () Real [-2.000000, 2.000000])
(declare-fun vy_1_0 () Real [-2.000000, 2.000000])
(declare-fun vy_1_t () Real [-2.000000, 2.000000])
(declare-fun vy_2_0 () Real [-2.000000, 2.000000])
(declare-fun vy_2_t () Real [-2.000000, 2.000000])
(declare-fun vy_3_0 () Real [-2.000000, 2.000000])
(declare-fun vy_3_t () Real [-2.000000, 2.000000])
(declare-fun vx_0_0 () Real [-2.000000, 2.000000])
(declare-fun vx_0_t () Real [-2.000000, 2.000000])
(declare-fun vx_1_0 () Real [-2.000000, 2.000000])
(declare-fun vx_1_t () Real [-2.000000, 2.000000])
(declare-fun vx_2_0 () Real [-2.000000, 2.000000])
(declare-fun vx_2_t () Real [-2.000000, 2.000000])
(declare-fun vx_3_0 () Real [-2.000000, 2.000000])
(declare-fun vx_3_t () Real [-2.000000, 2.000000])
(declare-fun time_0 () Real [0.000000, 2.000000])
(declare-fun time_1 () Real [0.000000, 2.000000])
(declare-fun time_2 () Real [0.000000, 2.000000])
(declare-fun time_3 () Real [0.000000, 2.000000])
(declare-fun mode_0 () Real [1.000000, 4.000000])
(declare-fun mode_1 () Real [1.000000, 4.000000])
(declare-fun mode_2 () Real [1.000000, 4.000000])
(declare-fun mode_3 () Real [1.000000, 4.000000])
(define-ode flow_1 ((= d/dt[vx] (+ (+ (/ 1 10) (* vy (/ 1 10))) (* vx (/ 1 10)))) (= d/dt[vy] (+ (+ (/ 1 10) (* vy (/ 1 10))) (* vx (/ 1 10)))) (= d/dt[x] vx) (= d/dt[y] vy)))
(define-ode flow_2 ((= d/dt[vx] (+ (+ (/ 1 10) (* vy (/ 1 10))) (* vx (/ 1 10)))) (= d/dt[vy] (+ (+ (/ 1 10) (* vy (/ 1 10))) (* vx (/ 1 10)))) (= d/dt[x] vx) (= d/dt[y] vy)))
(define-ode flow_3 ((= d/dt[vx] (+ (+ (- 0 (/ 1 5)) (* vy (/ 1 10))) (* vx (/ 1 10)))) (= d/dt[vy] (+ (+ (+ (- 0 (/ 1 10)) (- 0 (/ 1 10))) (* vy (/ 1 10))) (* vx (/ 1 10)))) (= d/dt[x] vx) (= d/dt[y] vy)))
(define-ode flow_4 ((= d/dt[vx] 0) (= d/dt[vy] 0) (= d/dt[x] 0) (= d/dt[y] 0)))
(assert (and (or (= mode_3 4) (= mode_3 3) (= mode_3 2)) (and (>= vx_0_0 -1) (>= (- 0 vx_0_0) -1) (>= (- 0 vy_0_0) -1) (>= vy_0_0 -1) (= (* 5 x_0_0) 2) (= (* 2 y_0_0) 7)) (= mode_0 1) (= [vx_0_t vy_0_t x_0_t y_0_t] (integral 0. time_0 [vx_0_0 vy_0_0 x_0_0 y_0_0] flow_1)) (= mode_0 1) (forall_t 1 [0 time_0] (>= (- 0 vy_0_t) -2)) (>= (- 0 vy_0_t) -2) (>= (- 0 vy_0_0) -2) (forall_t 1 [0 time_0] (>= (- 0 vx_0_t) -2)) (>= (- 0 vx_0_t) -2) (>= (- 0 vx_0_0) -2) (forall_t 1 [0 time_0] (>= (- 0 y_0_t) -4)) (>= (- 0 y_0_t) -4) (>= (- 0 y_0_0) -4) (forall_t 1 [0 time_0] (>= (- 0 x_0_t) -1)) (>= (- 0 x_0_t) -1) (>= (- 0 x_0_0) -1) (forall_t 1 [0 time_0] (>= vy_0_t -2)) (>= vy_0_t -2) (>= vy_0_0 -2) (forall_t 1 [0 time_0] (>= x_0_t 0)) (>= x_0_t 0) (>= x_0_0 0) (forall_t 1 [0 time_0] (>= y_0_t 3)) (>= y_0_t 3) (>= y_0_0 3) (forall_t 1 [0 time_0] (>= vx_0_t -2)) (>= vx_0_t -2) (>= vx_0_0 -2) (= mode_1 2) (>= (* 5 vx_0_t) -8) (>= (- 0 vx_0_t) -2) (>= (* 5 vy_0_t) -8) (>= (- 0 vy_0_t) -2) (>= (- 0 x_0_t) -1) (>= x_0_t 0) (= (- vy_0_t vy_1_0) 0) (= (- vx_0_t vx_1_0) 0) (= y_1_0 3) (= (- x_0_t x_1_0) 0) (= y_0_t 3) (= [vx_1_t vy_1_t x_1_t y_1_t] (integral 0. time_1 [vx_1_0 vy_1_0 x_1_0 y_1_0] flow_2)) (= mode_1 2) (forall_t 2 [0 time_1] (>= (- 0 vy_1_t) -2)) (>= (- 0 vy_1_t) -2) (>= (- 0 vy_1_0) -2) (forall_t 2 [0 time_1] (>= (- 0 vx_1_t) -2)) (>= (- 0 vx_1_t) -2) (>= (- 0 vx_1_0) -2) (forall_t 2 [0 time_1] (>= (- 0 y_1_t) -3)) (>= (- 0 y_1_t) -3) (>= (- 0 y_1_0) -3) (forall_t 2 [0 time_1] (>= (- 0 x_1_t) -1)) (>= (- 0 x_1_t) -1) (>= (- 0 x_1_0) -1) (forall_t 2 [0 time_1] (>= vy_1_t -2)) (>= vy_1_t -2) (>= vy_1_0 -2) (forall_t 2 [0 time_1] (>= x_1_t 0)) (>= x_1_t 0) (>= x_1_0 0) (forall_t 2 [0 time_1] (>= y_1_t 2)) (>= y_1_t 2) (>= y_1_0 2) (forall_t 2 [0 time_1] (>= vx_1_t -2)) (>= vx_1_t -2) (>= vx_1_0 -2) (= mode_2 3) (>= (- 0 y_1_t) -3) (>= (- 0 vx_1_t) -2) (>= (- 0 vy_1_t) -2) (>= vy_1_t -2) (>= vx_1_t -2) (>= y_1_t 2) (= (- vy_1_t vy_2_0) 0) (= (- vx_1_t vx_2_0) 0) (= (- y_1_t y_2_0) 0) (= x_2_0 1) (= x_1_t 1) (= [vx_2_t vy_2_t x_2_t y_2_t] (integral 0. time_2 [vx_2_0 vy_2_0 x_2_0 y_2_0] flow_3)) (= mode_2 3) (forall_t 3 [0 time_2] (>= (- 0 vy_2_t) -2)) (>= (- 0 vy_2_t) -2) (>= (- 0 vy_2_0) -2) (forall_t 3 [0 time_2] (>= (- 0 vx_2_t) -2)) (>= (- 0 vx_2_t) -2) (>= (- 0 vx_2_0) -2) (forall_t 3 [0 time_2] (>= (- 0 y_2_t) -3)) (>= (- 0 y_2_t) -3) (>= (- 0 y_2_0) -3) (forall_t 3 [0 time_2] (>= (- 0 x_2_t) -2)) (>= (- 0 x_2_t) -2) (>= (- 0 x_2_0) -2) (forall_t 3 [0 time_2] (>= vy_2_t -2)) (>= vy_2_t -2) (>= vy_2_0 -2) (forall_t 3 [0 time_2] (>= x_2_t 1)) (>= x_2_t 1) (>= x_2_0 1) (forall_t 3 [0 time_2] (>= y_2_t 2)) (>= y_2_t 2) (>= y_2_0 2) (forall_t 3 [0 time_2] (>= vx_2_t -2)) (>= vx_2_t -2) (>= vx_2_0 -2) (= mode_3 4) (= (- x_2_t x_3_0) 0) (= (- y_2_t y_3_0) 0) (= (- vx_2_t vx_3_0) 0) (= (- vy_2_t vy_3_0) 0) (= y_3_t (+ y_3_0 (* 0 time_3))) (= x_3_t (+ x_3_0 (* 0 time_3))) (= vy_3_t (+ vy_3_0 (* 0 time_3))) (= vx_3_t (+ vx_3_0 (* 0 time_3))) (= [vx_3_t vy_3_t x_3_t y_3_t] (integral 0. time_3 [vx_3_0 vy_3_0 x_3_0 y_3_0] flow_4)) (= mode_3 4) (forall_t 4 [0 time_3] (>= (- 0 vy_3_t) -2)) (>= (- 0 vy_3_t) -2) (>= (- 0 vy_3_0) -2) (forall_t 4 [0 time_3] (>= (- 0 vx_3_t) -2)) (>= (- 0 vx_3_t) -2) (>= (- 0 vx_3_0) -2) (forall_t 4 [0 time_3] (>= (- 0 y_3_t) -3)) (>= (- 0 y_3_t) -3) (>= (- 0 y_3_0) -3) (forall_t 4 [0 time_3] (>= (- 0 x_3_t) -2)) (>= (- 0 x_3_t) -2) (>= (- 0 x_3_0) -2) (forall_t 4 [0 time_3] (>= vy_3_t -2)) (>= vy_3_t -2) (>= vy_3_0 -2) (forall_t 4 [0 time_3] (>= x_3_t 1)) (>= x_3_t 1) (>= x_3_0 1) (forall_t 4 [0 time_3] (>= y_3_t 2)) (>= y_3_t 2) (>= y_3_0 2) (forall_t 4 [0 time_3] (>= vx_3_t -2)) (>= vx_3_t -2) (>= vx_3_0 -2)))
(check-sat)
(exit)
