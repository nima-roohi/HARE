(set-logic QF_NRA_ODE)
(declare-fun yy () Real [1.000000, 2.000000])
(declare-fun xx () Real [2.000000, 2.026194])
(declare-fun vy () Real [-0.031635, 0.600000])
(declare-fun vx () Real [-0.350000, -0.265729])
(declare-fun yy_0_0 () Real [1.000000, 2.000000])
(declare-fun yy_0_t () Real [1.000000, 2.000000])
(declare-fun yy_1_0 () Real [1.000000, 2.000000])
(declare-fun yy_1_t () Real [1.000000, 2.000000])
(declare-fun xx_0_0 () Real [2.000000, 2.026194])
(declare-fun xx_0_t () Real [2.000000, 2.026194])
(declare-fun xx_1_0 () Real [2.000000, 2.026194])
(declare-fun xx_1_t () Real [2.000000, 2.026194])
(declare-fun vy_0_0 () Real [-0.031635, 0.600000])
(declare-fun vy_0_t () Real [-0.031635, 0.600000])
(declare-fun vy_1_0 () Real [-0.031635, 0.600000])
(declare-fun vy_1_t () Real [-0.031635, 0.600000])
(declare-fun vx_0_0 () Real [-0.350000, -0.265729])
(declare-fun vx_0_t () Real [-0.350000, -0.265729])
(declare-fun vx_1_0 () Real [-0.350000, -0.265729])
(declare-fun vx_1_t () Real [-0.350000, -0.265729])
(declare-fun time_0 () Real [0.000000, 4.000000])
(declare-fun time_1 () Real [0.000000, 4.000000])
(declare-fun mode_0 () Real [1.000000, 4.000000])
(declare-fun mode_1 () Real [1.000000, 4.000000])
(define-ode flow_1 ((= d/dt[vx] (+ (- 0 (* (/ 6 5) vx)) (* (/ 1 10) (+ vy 1)))) (= d/dt[vy] (- (* (/ 1 10) vx) (* (/ 6 5) (+ vy 1)))) (= d/dt[xx] vx) (= d/dt[yy] vy)))
(define-ode flow_2 ((= d/dt[vx] (+ (- 0 (* (/ 6 5) (- vx (/ 707 1000)))) (* (/ 1 10) (+ vy (/ 707 1000))))) (= d/dt[vy] (- (* (/ 1 10) (- vx (/ 707 1000))) (* (/ 6 5) (+ vy (/ 707 1000))))) (= d/dt[xx] vx) (= d/dt[yy] vy)))
(define-ode flow_3 ((= d/dt[vx] (+ (- 0 (* (/ 6 5) (- vx 1))) (* (/ 1 10) vy))) (= d/dt[vy] (- (* (/ 1 10) (- vx 1)) (* (/ 6 5) vy))) (= d/dt[xx] vx) (= d/dt[yy] vy)))
(define-ode flow_4 ((= d/dt[vx] 0) (= d/dt[vy] 0) (= d/dt[xx] 0) (= d/dt[yy] 0)))
(assert (and (or (= mode_1 4) (= mode_1 3) (= mode_1 2)) (and (>= xx_0_0 2) (> (- 0 vy_0_0) 0) (>= (- 0 yy_0_0) -2) (>= (+ (- (+ (* -12560 xx_0_0) (* 6720 yy_0_0)) (* 9600 vx_0_0)) (* 10400 vy_0_0)) -9129) (>= (* 10 vx_0_0) -3)) (= mode_0 1) (= [vx_0_t vy_0_t xx_0_t yy_0_t] (integral 0. time_0 [vx_0_0 vy_0_0 xx_0_0 yy_0_0] flow_1)) (= mode_0 1) (forall_t 1 [0 time_0] (>= (- 0 xx_0_t) -3)) (>= (- 0 xx_0_t) -3) (>= (- 0 xx_0_0) -3) (forall_t 1 [0 time_0] (>= (- 0 yy_0_t) -2)) (>= (- 0 yy_0_t) -2) (>= (- 0 yy_0_0) -2) (forall_t 1 [0 time_0] (>= (- 0 vx_0_t) -2)) (>= (- 0 vx_0_t) -2) (>= (- 0 vx_0_0) -2) (forall_t 1 [0 time_0] (>= (- 0 vy_0_t) -2)) (>= (- 0 vy_0_t) -2) (>= (- 0 vy_0_0) -2) (forall_t 1 [0 time_0] (>= xx_0_t 2)) (>= xx_0_t 2) (>= xx_0_0 2) (forall_t 1 [0 time_0] (>= vy_0_t -2)) (>= vy_0_t -2) (>= vy_0_0 -2) (forall_t 1 [0 time_0] (>= vx_0_t -2)) (>= vx_0_t -2) (>= vx_0_0 -2) (forall_t 1 [0 time_0] (>= yy_0_t 1)) (>= yy_0_t 1) (>= yy_0_0 1) (= mode_1 2) (>= (+ (- 0 yy_0_t) (* 20 vx_0_t)) -8) (> (- (* -3 yy_0_t) (* 5 vy_0_t)) -6) (>= (* 20000 vy_0_t) 11191) (>= (+ (- (* 28000 yy_0_t) (* 40000 vx_0_t)) (* 20000 vy_0_t)) 53573) (>= yy_0_t 1) (= xx_1_0 2) (= (- yy_0_t yy_1_0) 0) (= (- vx_0_t vx_1_0) 0) (= (- vy_0_t vy_1_0) 0) (= xx_0_t 2) (= [vx_1_t vy_1_t xx_1_t yy_1_t] (integral 0. time_1 [vx_1_0 vy_1_0 xx_1_0 yy_1_0] flow_2)) (= mode_1 2) (forall_t 2 [0 time_1] (>= (- 0 xx_1_t) -2)) (>= (- 0 xx_1_t) -2) (>= (- 0 xx_1_0) -2) (forall_t 2 [0 time_1] (>= (- 0 yy_1_t) -2)) (>= (- 0 yy_1_t) -2) (>= (- 0 yy_1_0) -2) (forall_t 2 [0 time_1] (>= (- 0 vx_1_t) -2)) (>= (- 0 vx_1_t) -2) (>= (- 0 vx_1_0) -2) (forall_t 2 [0 time_1] (>= (- 0 vy_1_t) -2)) (>= (- 0 vy_1_t) -2) (>= (- 0 vy_1_0) -2) (forall_t 2 [0 time_1] (>= xx_1_t 1)) (>= xx_1_t 1) (>= xx_1_0 1) (forall_t 2 [0 time_1] (>= vy_1_t 0)) (>= vy_1_t 0) (>= vy_1_0 0) (forall_t 2 [0 time_1] (>= vx_1_t -2)) (>= vx_1_t -2) (>= vx_1_0 -2) (forall_t 2 [0 time_1] (>= yy_1_t 1)) (>= yy_1_t 1) (>= yy_1_0 1)))
(check-sat)
(exit)
