vars "x2, x3, x1"
hybrid-automaton {
  loc 0 {
    inv  "((0 <= x2 && x2 <= 100) && (0 <= x3 && x3 <= 100)) && (0 <= x1 && x1 <= 100)" 
    flow {
      x1 "x1 * (1/20) * -1 + (1/2) + x2 * (3/4) + x1 * (1/4) * -3 + x3 * (1/2) + x1 * (1/2) * -1"
      x2 "x2 * (1/10) * -1 + 1 + x1 * (3/4) + x2 * (1/4) * -3 + x3 * (1/4) + x2 * (1/4) * -1"
      x3 "x3 * (1/20) * -3 + (3/2) + x2 * (1/4) + x3 * (1/4) * -1 + x1 * (1/2) + x3 * (1/2) * -1"  }  }
  loc 1 {
    inv  "((0 <= x2 && x2 <= 100) && (0 <= x3 && x3 <= 100)) && (0 <= x1 && x1 <= 100)" 
    flow {
      x1 "x1 * (1/20) * -1 + (1/2) + x2 * (3/4) + x1 * (1/4) * -3 + x3 * (1/2) + x1 * (1/2) * -1 + 5"
      x2 "x2 * (1/10) * -1 + 1 + x1 * (3/4) + x2 * (1/4) * -3 + x3 * (1/4) + x2 * (1/4) * -1"
      x3 "x3 * (1/20) * -3 + (3/2) + x2 * (1/4) + x3 * (1/4) * -1 + x1 * (1/2) + x3 * (1/2) * -1"  }  }
  loc 2 {
    inv  "((0 <= x2 && x2 <= 100) && (0 <= x3 && x3 <= 100)) && (0 <= x1 && x1 <= 100)" 
    flow {
      x1 "x1 * (1/20) * -1 + (1/2) + x2 * (3/4) + x1 * (1/4) * -3 + x3 * (1/2) + x1 * (1/2) * -1"
      x2 "x2 * (1/10) * -1 + 1 + x1 * (3/4) + x2 * (1/4) * -3 + x3 * (1/4) + x2 * (1/4) * -1"
      x3 "x3 * (1/20) * -3 + (3/2) + x2 * (1/4) + x3 * (1/4) * -1 + x1 * (1/2) + x3 * (1/2) * -1"  }  }
  loc 3 {
    inv  "((0 <= x2 && x2 <= 100) && (0 <= x3 && x3 <= 100)) && (0 <= x1 && x1 <= 100)" 
    flow {
      x1 "x1 * (1/20) * -1 + (1/2) + x2 * (3/4) + x1 * (1/4) * -3 + x3 * (1/2) + x1 * (1/2) * -1"
      x2 "x2 * (1/10) * -1 + 1 + x1 * (3/4) + x2 * (1/4) * -3 + x3 * (1/4) + x2 * (1/4) * -1"
      x3 "x3 * (1/20) * -3 + (3/2) + x2 * (1/4) + x3 * (1/4) * -1 + x1 * (1/2) + x3 * (1/2) * -1 + 5"  }  }
  edge {
    src 0
    dst 1
    rel "x1 <= 20 && true && x2 == x2' && x3 == x3' && x1 == x1'"  } 
  edge {
    src 0
    dst 2
    rel "x2 <= 20 && true && x2 == x2' && x3 == x3' && x1 == x1'"  } 
  edge {
    src 0
    dst 3
    rel "true && true && x2 == x2' && x3 == x3' && x1 == x1'"  } 
  edge {
    src 1
    dst 0
    rel "(45/2) <= x1 && true && x2 == x2' && x3 == x3' && x1 == x1'"  } 
  edge {
    src 2
    dst 0
    rel "25 <= x2 && true && x2 == x2' && x3 == x3' && x1 == x1'"  } 
  edge {
    src 3
    dst 0
    rel "(55/2) <= x3 && true && x2 == x2' && x3 == x3' && x1 == x1'"  } 
}
inits {
  _ "(((5 == 5 && 20 == 20) && x3 == 20) && x1 == 20) && x2 == 15" 
}
unsafes {
  _ "((((x3 <= 27 && x2 <= 27) && x1 <= 27) && 25 <= x1) && 25 <= x2) && 25 <= x3" 
}
props {
  mc-poly {
    direction                backward
    separate-identity-resets true
    add-to-visiteds-on-check true
  }
  mc-nlfpoly {
    bound-cont-trans                   true
    bound-cont-trans-by-eq             false
    cont-tran-duration                 "20"
    connect-splitted-locs              false
    use-empty-labels-for-bounding-time true
  }
}
      
