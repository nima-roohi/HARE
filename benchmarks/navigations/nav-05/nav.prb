vars "vy, vx, y, x"
hybrid-automaton {
  loc 0 {
    inv  "(((-2 <= vy && vy <= 2) && (-2 <= vx && vx <= 2)) && (0 <= y && y <= 1)) && (0 <= x && x <= 1)" 
    flow {
      vy "vx"
      vx "-1 + vy"
      y "vy"
      x "vx"  }  }
  loc 1 {
    inv  "(((-2 <= vy && vy <= 2) && (-2 <= vx && vx <= 2)) && (0 <= y && y <= 1)) && (1 <= x && x <= 2)" 
    flow {
      vy "1 + vx"
      vx "vy"
      y "vy"
      x "vx"  }  }
  loc 2 {
    inv  "(((-2 <= vy && vy <= 2) && (-2 <= vx && vx <= 2)) && (0 <= y && y <= 1)) && (2 <= x && x <= 3)" 
    flow {
      vy "-1 + vx"
      vx "vy"
      y "vy"
      x "vx"  }  }
  loc 3 {
    inv  "(((-2 <= vy && vy <= 2) && (-2 <= vx && vx <= 2)) && (1 <= y && y <= 2)) && (0 <= x && x <= 1)" 
    flow {
      vy "vx"
      vx "-1 + vy"
      y "vy"
      x "vx"  }  }
  loc 4 {
    inv  "(((-2 <= vy && vy <= 2) && (-2 <= vx && vx <= 2)) && (1 <= y && y <= 2)) && (1 <= x && x <= 2)" 
    flow {
      vy "1 + vx"
      vx "1 + vy"
      y "vy"
      x "vx"  }  }
  loc 5 {
    inv  "(((-2 <= vy && vy <= 2) && (-2 <= vx && vx <= 2)) && (1 <= y && y <= 2)) && (2 <= x && x <= 3)" 
    flow {
      vy "1 + vx"
      vx "-1 + vy"
      y "vy"
      x "vx"  }  }
  loc 6 {
    inv  "(((-2 <= vy && vy <= 2) && (-2 <= vx && vx <= 2)) && (2 <= y && y <= 3)) && (0 <= x && x <= 1)" 
    flow {
      vy "0"
      vx "0"
      y "0"
      x "0"  }  }
  loc 7 {
    inv  "(((-2 <= vy && vy <= 2) && (-2 <= vx && vx <= 2)) && (2 <= y && y <= 3)) && (1 <= x && x <= 2)" 
    flow {
      vy "-1 + vx"
      vx "1 + vy"
      y "vy"
      x "vx"  }  }
  loc 8 {
    inv  "(((-2 <= vy && vy <= 2) && (-2 <= vx && vx <= 2)) && (2 <= y && y <= 3)) && (2 <= x && x <= 3)" 
    flow {
      vy "1 + vx"
      vx "-1 + vy"
      y "vy"
      x "vx"  }  }
  edge {
    src 0
    dst 3
    rel "y == 1 && true && vy == vy' && vx == vx' && y == y' && x == x'"  } 
  edge {
    src 0
    dst 1
    rel "x == 1 && true && vy == vy' && vx == vx' && y == y' && x == x'"  } 
  edge {
    src 1
    dst 4
    rel "y == 1 && true && vy == vy' && vx == vx' && y == y' && x == x'"  } 
  edge {
    src 1
    dst 2
    rel "x == 2 && true && vy == vy' && vx == vx' && y == y' && x == x'"  } 
  edge {
    src 1
    dst 0
    rel "x == 1 && true && vy == vy' && vx == vx' && y == y' && x == x'"  } 
  edge {
    src 2
    dst 5
    rel "y == 1 && true && vy == vy' && vx == vx' && y == y' && x == x'"  } 
  edge {
    src 2
    dst 1
    rel "x == 2 && true && vy == vy' && vx == vx' && y == y' && x == x'"  } 
  edge {
    src 3
    dst 6
    rel "y == 2 && true && vy == vy' && vx == vx' && y == y' && x == x'"  } 
  edge {
    src 3
    dst 4
    rel "x == 1 && true && vy == vy' && vx == vx' && y == y' && x == x'"  } 
  edge {
    src 3
    dst 0
    rel "y == 1 && true && vy == vy' && vx == vx' && y == y' && x == x'"  } 
  edge {
    src 4
    dst 7
    rel "y == 2 && true && vy == vy' && vx == vx' && y == y' && x == x'"  } 
  edge {
    src 4
    dst 5
    rel "x == 2 && true && vy == vy' && vx == vx' && y == y' && x == x'"  } 
  edge {
    src 4
    dst 1
    rel "y == 1 && true && vy == vy' && vx == vx' && y == y' && x == x'"  } 
  edge {
    src 4
    dst 3
    rel "x == 1 && true && vy == vy' && vx == vx' && y == y' && x == x'"  } 
  edge {
    src 5
    dst 8
    rel "y == 2 && true && vy == vy' && vx == vx' && y == y' && x == x'"  } 
  edge {
    src 5
    dst 2
    rel "y == 1 && true && vy == vy' && vx == vx' && y == y' && x == x'"  } 
  edge {
    src 5
    dst 4
    rel "x == 2 && true && vy == vy' && vx == vx' && y == y' && x == x'"  } 
  edge {
    src 6
    dst 7
    rel "x == 1 && true && vy == vy' && vx == vx' && y == y' && x == x'"  } 
  edge {
    src 6
    dst 3
    rel "y == 2 && true && vy == vy' && vx == vx' && y == y' && x == x'"  } 
  edge {
    src 7
    dst 8
    rel "x == 2 && true && vy == vy' && vx == vx' && y == y' && x == x'"  } 
  edge {
    src 7
    dst 4
    rel "y == 2 && true && vy == vy' && vx == vx' && y == y' && x == x'"  } 
  edge {
    src 7
    dst 6
    rel "x == 1 && true && vy == vy' && vx == vx' && y == y' && x == x'"  } 
  edge {
    src 8
    dst 5
    rel "y == 2 && true && vy == vy' && vx == vx' && y == y' && x == x'"  } 
  edge {
    src 8
    dst 7
    rel "x == 2 && true && vy == vy' && vx == vx' && y == y' && x == x'"  } 
}
inits {
  2 "((x == 11 / 5 && y == 1 / 5) && vx == 1) && vy ==  - 1" 
}
unsafes {
  6 "true" 
}
props {
  mc-poly {
    direction                forward
    separate-identity-resets true
    add-to-visiteds-on-check true
  }
  mc-nlfpoly {
    bound-cont-trans                   true
    bound-cont-trans-by-eq             false
    cont-tran-duration                 "2"
    connect-splitted-locs              false
    use-empty-labels-for-bounding-time true
  }
}
