~/Git/Codes/HARE$ time ./bin/clang-darwin-8.0.0/release/bench
01:23:53 [main.cpp:check:34] checking tank-01
01:23:53 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:23:53 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:23:53 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:23:53 [main.cpp:check:38] tank-01 is UNSAFE
01:23:53 [main.cpp:check:34] checking tank-02
01:23:53 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:23:53 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:23:53 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:23:53 [main.cpp:check:38] tank-02 is UNSAFE
01:23:53 [main.cpp:check:34] checking tank-03
01:23:53 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:23:53 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:23:53 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:23:53 [main.cpp:check:38] tank-03 is UNSAFE
01:23:53 [main.cpp:check:34] checking tank-04
01:23:53 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:23:54 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:23:54 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:23:54 [main.cpp:check:38] tank-04 is UNSAFE
01:23:54 [main.cpp:check:34] checking tank-06
01:23:54 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:23:54 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:23:54 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:23:54 [main.cpp:check:38] tank-06 is UNSAFE
01:23:54 [main.cpp:check:34] checking tank-07
01:23:54 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:23:54 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:23:54 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:23:54 [main.cpp:check:38] tank-07 is UNSAFE
01:23:54 [main.cpp:check:34] checking tank-08
01:23:54 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:23:54 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:23:54 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:23:54 [main.cpp:check:38] tank-08 is UNSAFE
01:23:54 [main.cpp:check:34] checking tank-09
01:23:54 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:23:54 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:23:54 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:23:54 [main.cpp:check:38] tank-09 is UNSAFE
01:23:54 [main.cpp:check:34] checking tank-10
01:23:54 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:23:54 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:23:54 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:23:54 [main.cpp:check:38] tank-10 is UNSAFE
01:23:54 [main.cpp:check:34] checking tank-11
01:23:54 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:23:55 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:23:55 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:23:55 [main.cpp:check:38] tank-11 is UNSAFE
01:23:55 [main.cpp:check:34] checking tank-12
01:23:55 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:23:55 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:23:55 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:23:55 [main.cpp:check:38] tank-12 is UNSAFE
01:23:55 [main.cpp:check:34] checking tank-13
01:23:55 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:23:55 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:23:55 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:23:55 [main.cpp:check:38] tank-13 is UNSAFE
01:23:55 [main.cpp:check:34] checking tank-14
01:23:55 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:23:56 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:23:56 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:23:56 [main.cpp:check:38] tank-14 is UNSAFE
01:23:56 [main.cpp:check:34] checking tank-15
01:23:56 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:23:56 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:24:00 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:24:00 [main.cpp:check:38] tank-15 is UNSAFE
01:24:00 [main.cpp:check:34] checking tank-16
01:24:00 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:24:00 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:24:00 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:24:00 [main.cpp:check:38] tank-16 is SAFE
01:24:01 [main.cpp:check:34] checking tank-17
01:24:01 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:24:01 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:24:01 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:24:01 [main.cpp:check:38] tank-17 is SAFE
01:24:01 [main.cpp:check:43] checking sat-01
01:24:01 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:24:01 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:24:01 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:24:01 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:24:01 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:24:01 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:24:01 [main.cpp:check:47] sat-01 is SAFE
01:24:01 [main.cpp:check:43] checking sat-02
01:24:01 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:24:01 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:24:01 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:24:01 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:24:01 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:24:01 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:24:01 [main.cpp:check:47] sat-02 is SAFE
01:24:01 [main.cpp:check:43] checking sat-03
01:24:01 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:24:01 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:24:01 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:24:01 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:24:02 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:24:02 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:24:02 [main.cpp:check:47] sat-03 is SAFE
01:24:02 [main.cpp:check:43] checking sat-04
01:24:02 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:24:02 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:24:02 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:24:02 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:24:02 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:24:02 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:24:02 [main.cpp:check:47] sat-04 is SAFE
01:24:02 [main.cpp:check:43] checking sat-05
01:24:02 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:24:02 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:24:02 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:24:02 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:24:02 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:24:02 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:24:02 [main.cpp:check:47] sat-05 is SAFE
01:24:02 [main.cpp:check:43] checking sat-06
01:24:03 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:24:03 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:24:03 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:24:03 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:24:03 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:24:03 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:24:03 [main.cpp:check:47] sat-06 is SAFE
01:24:03 [main.cpp:check:43] checking sat-07
01:24:03 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:24:03 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:24:03 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:24:03 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:24:04 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:24:04 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:24:04 [main.cpp:check:47] sat-07 is SAFE
01:24:04 [main.cpp:check:43] checking sat-08
01:24:05 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:24:05 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:24:05 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:24:05 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:24:05 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:24:05 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:24:05 [main.cpp:check:47] sat-08 is SAFE
01:24:06 [main.cpp:check:43] checking sat-09
01:24:07 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:24:07 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:24:07 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:24:07 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:24:07 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:24:07 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:24:07 [main.cpp:check:47] sat-09 is SAFE
01:24:08 [main.cpp:check:43] checking sat-10
01:24:09 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:24:09 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:24:09 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:24:09 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:24:09 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:24:09 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:24:09 [main.cpp:check:47] sat-10 is SAFE
01:24:09 [main.cpp:check:43] checking sat-11
01:24:11 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:24:11 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:24:11 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:24:11 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:24:11 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:24:11 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:24:11 [main.cpp:check:47] sat-11 is SAFE
01:24:11 [main.cpp:check:43] checking sat-12
01:24:12 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:24:12 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:24:12 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:24:12 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:24:12 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:24:12 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:24:12 [main.cpp:check:47] sat-12 is SAFE
01:24:12 [main.cpp:check:43] checking sat-13
01:24:14 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:24:14 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:24:14 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:24:14 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:24:14 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:24:14 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:24:14 [main.cpp:check:47] sat-13 is SAFE
01:24:14 [main.cpp:check:43] checking sat-14
01:24:17 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:24:17 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:24:17 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:24:17 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:24:17 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:24:17 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:24:17 [main.cpp:check:47] sat-14 is SAFE
01:24:18 [main.cpp:check:43] checking sat-15
01:24:20 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:24:20 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:24:21 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:24:21 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:24:21 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:24:21 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:24:21 [main.cpp:check:47] sat-15 is SAFE
01:24:21 [main.cpp:check:43] checking heater-02
01:24:21 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:24:21 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:24:21 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:24:21 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:24:21 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:24:21 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 0
01:24:21 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 0
01:24:21 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 0
01:24:21 [utils_dreach.hpp:create_ws_folder:494] working space is created at ./ws/n1
01:24:21 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:24:21 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:24:21 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:24:21 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 0
01:24:21 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 0] splitting invariant on x1==25 when range is [0,50]
01:24:21 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:24:22 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:24:22 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:24:22 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 0
01:24:22 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 4
01:24:22 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 0
01:24:22 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:24:22 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:24:22 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:24:22 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 4
01:24:22 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 4] splitting invariant on x3==25 when range is [0,50]
01:24:22 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:24:22 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:24:22 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:24:22 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 0
01:24:22 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 1
01:24:22 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 1
01:24:22 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:24:22 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:24:22 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 1
01:24:22 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? UNSAFE)
01:24:22 [main.cpp:check:47] heater-02 is UNSAFE
01:24:22 [main.cpp:check:43] checking heater-03
01:24:22 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:24:22 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:24:22 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 3] splitting invariant on x1==25 when range is [0,50]
01:24:22 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 2] splitting invariant on x1==25 when range is [0,50]
01:24:22 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 1] splitting invariant on x3==25 when range is [0,50]
01:24:22 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 0] splitting invariant on x1==25 when range is [0,50]
01:24:22 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 7] splitting invariant on x3==25 when range is [0,50]
01:24:22 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 6] splitting invariant on x1==25 when range is [0,50]
01:24:22 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 5] splitting invariant on x3==25 when range is [0,50]
01:24:22 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 4] splitting invariant on x3==25 when range is [0,50]
01:24:22 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 3] splitting invariant on x3==25 when range is [0,50]
01:24:22 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 2] splitting invariant on x3==25 when range is [0,50]
01:24:22 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 1] splitting invariant on x1==25 when range is [0,50]
01:24:22 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 0] splitting invariant on x3==25 when range is [0,50]
01:24:22 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 15] splitting invariant on x2==25 when range is [0,50]
01:24:22 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 14] splitting invariant on x2==25 when range is [0,50]
01:24:22 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 13] splitting invariant on x2==25 when range is [0,50]
01:24:22 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 12] splitting invariant on x2==25 when range is [0,50]
01:24:22 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 11] splitting invariant on x2==25 when range is [0,50]
01:24:22 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 10] splitting invariant on x2==25 when range is [0,50]
01:24:22 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 9] splitting invariant on x2==25 when range is [0,50]
01:24:23 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 8] splitting invariant on x2==25 when range is [0,50]
01:24:23 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 7] splitting invariant on x2==25 when range is [0,50]
01:24:23 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 6] splitting invariant on x2==25 when range is [0,50]
01:24:23 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 5] splitting invariant on x2==25 when range is [0,50]
01:24:23 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 4] splitting invariant on x2==25 when range is [0,50]
01:24:23 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 3] splitting invariant on x2==25 when range is [0,50]
01:24:23 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 2] splitting invariant on x2==25 when range is [0,50]
01:24:23 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 1] splitting invariant on x2==25 when range is [0,50]
01:24:23 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 0] splitting invariant on x2==25 when range is [0,50]
01:24:23 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 31] splitting invariant on x1==75/2 when range is [25,50]
01:24:23 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 30] splitting invariant on x3==75/2 when range is [25,50]
01:24:23 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 29] splitting invariant on x1==75/2 when range is [25,50]
01:24:23 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 28] splitting invariant on x1==75/2 when range is [25,50]
01:24:23 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 27] splitting invariant on x1==25/2 when range is [0,25]
01:24:23 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 26] splitting invariant on x1==25/2 when range is [0,25]
01:24:23 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 25] splitting invariant on x3==25/2 when range is [0,25]
01:24:23 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 24] splitting invariant on x1==25/2 when range is [0,25]
01:24:23 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 23] splitting invariant on x1==25/2 when range is [0,25]
01:24:23 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 22] splitting invariant on x3==25/2 when range is [0,25]
01:24:23 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 21] splitting invariant on x1==25/2 when range is [0,25]
01:24:23 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 20] splitting invariant on x1==25/2 when range is [0,25]
01:24:23 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 19] splitting invariant on x1==75/2 when range is [25,50]
01:24:24 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 18] splitting invariant on x1==75/2 when range is [25,50]
01:24:24 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 17] splitting invariant on x3==75/2 when range is [25,50]
01:24:24 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 16] splitting invariant on x1==75/2 when range is [25,50]
01:24:24 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 15] splitting invariant on x1==75/2 when range is [25,50]
01:24:24 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 14] splitting invariant on x3==75/2 when range is [25,50]
01:24:24 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 13] splitting invariant on x1==75/2 when range is [25,50]
01:24:25 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 12] splitting invariant on x1==75/2 when range is [25,50]
01:24:25 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 11] splitting invariant on x1==25/2 when range is [0,25]
01:24:25 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 10] splitting invariant on x1==25/2 when range is [0,25]
01:24:25 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 9] splitting invariant on x3==25/2 when range is [0,25]
01:24:25 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 8] splitting invariant on x1==25/2 when range is [0,25]
01:24:25 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 7] splitting invariant on x1==25/2 when range is [0,25]
01:24:25 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 6] splitting invariant on x3==25/2 when range is [0,25]
01:24:25 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 5] splitting invariant on x1==25/2 when range is [0,25]
01:24:25 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 4] splitting invariant on x1==25/2 when range is [0,25]
01:24:25 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 3] splitting invariant on x1==75/2 when range is [25,50]
01:24:25 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 2] splitting invariant on x1==75/2 when range is [25,50]
01:24:26 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 1] splitting invariant on x3==75/2 when range is [25,50]
01:24:26 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 0] splitting invariant on x1==75/2 when range is [25,50]
01:24:26 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 63] splitting invariant on x3==75/2 when range is [25,50]
01:24:26 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 62] splitting invariant on x1==75/2 when range is [25,50]
01:24:27 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 61] splitting invariant on x3==75/2 when range is [25,50]
01:24:27 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 60] splitting invariant on x3==75/2 when range is [25,50]
01:24:27 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 59] splitting invariant on x3==75/2 when range is [25,50]
01:24:27 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 58] splitting invariant on x3==75/2 when range is [25,50]
01:24:27 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 57] splitting invariant on x1==75/2 when range is [25,50]
01:24:27 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 56] splitting invariant on x3==75/2 when range is [25,50]
01:24:27 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 55] splitting invariant on x3==25/2 when range is [0,25]
01:24:27 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 54] splitting invariant on x1==25/2 when range is [0,25]
01:24:27 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 53] splitting invariant on x3==25/2 when range is [0,25]
01:24:27 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 52] splitting invariant on x3==25/2 when range is [0,25]
01:24:27 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 51] splitting invariant on x3==25/2 when range is [0,25]
01:24:27 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 50] splitting invariant on x3==25/2 when range is [0,25]
01:24:27 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 49] splitting invariant on x1==25/2 when range is [0,25]
01:24:27 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 48] splitting invariant on x3==25/2 when range is [0,25]
01:24:27 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 47] splitting invariant on x3==25/2 when range is [0,25]
01:24:28 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 46] splitting invariant on x1==25/2 when range is [0,25]
01:24:28 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 45] splitting invariant on x3==25/2 when range is [0,25]
01:24:28 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 44] splitting invariant on x3==25/2 when range is [0,25]
01:24:28 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 43] splitting invariant on x3==25/2 when range is [0,25]
01:24:28 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 42] splitting invariant on x3==25/2 when range is [0,25]
01:24:28 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 41] splitting invariant on x1==25/2 when range is [0,25]
01:24:28 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 40] splitting invariant on x3==25/2 when range is [0,25]
01:24:28 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 39] splitting invariant on x3==75/2 when range is [25,50]
01:24:28 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 38] splitting invariant on x1==75/2 when range is [25,50]
01:24:28 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 37] splitting invariant on x3==75/2 when range is [25,50]
01:24:29 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 36] splitting invariant on x3==75/2 when range is [25,50]
01:24:29 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 35] splitting invariant on x3==75/2 when range is [25,50]
01:24:29 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 34] splitting invariant on x3==75/2 when range is [25,50]
01:24:30 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 33] splitting invariant on x1==75/2 when range is [25,50]
01:24:30 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 32] splitting invariant on x3==75/2 when range is [25,50]
01:24:31 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 31] splitting invariant on x3==75/2 when range is [25,50]
01:24:32 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 30] splitting invariant on x1==75/2 when range is [25,50]
01:24:32 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 29] splitting invariant on x3==75/2 when range is [25,50]
01:24:32 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 28] splitting invariant on x3==75/2 when range is [25,50]
01:24:33 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 27] splitting invariant on x3==75/2 when range is [25,50]
01:24:33 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 26] splitting invariant on x3==75/2 when range is [25,50]
01:24:34 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 25] splitting invariant on x1==75/2 when range is [25,50]
01:24:34 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 24] splitting invariant on x3==75/2 when range is [25,50]
01:24:35 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 23] splitting invariant on x3==25/2 when range is [0,25]
01:24:35 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 22] splitting invariant on x1==25/2 when range is [0,25]
01:24:35 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 21] splitting invariant on x3==25/2 when range is [0,25]
01:24:35 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 20] splitting invariant on x3==25/2 when range is [0,25]
01:24:35 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 19] splitting invariant on x3==25/2 when range is [0,25]
01:24:35 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 18] splitting invariant on x3==25/2 when range is [0,25]
01:24:35 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 17] splitting invariant on x1==25/2 when range is [0,25]
01:24:35 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 16] splitting invariant on x3==25/2 when range is [0,25]
01:24:36 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 15] splitting invariant on x3==25/2 when range is [0,25]
01:24:36 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 14] splitting invariant on x1==25/2 when range is [0,25]
01:24:36 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 13] splitting invariant on x3==25/2 when range is [0,25]
01:24:36 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 12] splitting invariant on x3==25/2 when range is [0,25]
01:24:36 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 11] splitting invariant on x3==25/2 when range is [0,25]
01:24:36 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 10] splitting invariant on x3==25/2 when range is [0,25]
01:24:36 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 9] splitting invariant on x1==25/2 when range is [0,25]
01:24:36 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 8] splitting invariant on x3==25/2 when range is [0,25]
01:24:36 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 7] splitting invariant on x3==75/2 when range is [25,50]
01:24:37 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 6] splitting invariant on x1==75/2 when range is [25,50]
01:24:37 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 5] splitting invariant on x3==75/2 when range is [25,50]
01:24:38 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 4] splitting invariant on x3==75/2 when range is [25,50]
01:24:39 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 3] splitting invariant on x3==75/2 when range is [25,50]
01:24:40 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 2] splitting invariant on x3==75/2 when range is [25,50]
01:24:40 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 1] splitting invariant on x1==75/2 when range is [25,50]
01:24:40 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 0] splitting invariant on x3==75/2 when range is [25,50]
01:24:41 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:24:42 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:25:12 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:25:12 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:25:12 [main.cpp:check:47] heater-03 is SAFE
01:25:12 [main.cpp:check:43] checking heater-04
01:25:12 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:25:12 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:25:12 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:25:13 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:25:13 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:25:13 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 0
01:25:13 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 0
01:25:13 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 0
01:25:13 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:25:13 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:25:13 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:25:13 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 0
01:25:13 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 0] splitting invariant on x1==25 when range is [0,50]
01:25:13 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:25:13 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:25:13 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:25:13 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 0
01:25:13 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 4
01:25:13 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 0
01:25:13 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:25:13 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:25:13 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:25:13 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 4
01:25:13 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 4] splitting invariant on x3==25 when range is [0,50]
01:25:13 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:25:13 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:25:13 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:25:13 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 0
01:25:13 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 5
01:25:13 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 0
01:25:13 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:25:13 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:25:13 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:25:13 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 5
01:25:13 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 5] splitting invariant on x2==25 when range is [0,50]
01:25:13 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:25:13 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:25:13 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:25:13 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 0
01:25:13 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 6
01:25:13 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 0
01:25:13 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:25:14 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:25:14 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:25:14 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 6
01:25:14 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 6] splitting invariant on x1==25/2 when range is [0,25]
01:25:14 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:25:14 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:25:14 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:25:14 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 0
01:25:14 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 1
01:25:14 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 1
01:25:14 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:25:14 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:25:14 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:25:14 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 1
01:25:14 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 1] splitting invariant on x3==25 when range is [0,50]
01:25:14 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:25:14 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:25:14 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:25:14 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 0
01:25:14 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 2
01:25:14 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 2
01:25:14 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:25:14 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:25:14 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:25:14 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 2
01:25:14 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 2] splitting invariant on x1==25 when range is [0,50]
01:25:14 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:25:15 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:25:15 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:25:15 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 0
01:25:15 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 9
01:25:15 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 2
01:25:15 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:25:15 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:25:15 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:25:15 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 9
01:25:15 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 9] splitting invariant on x3==25 when range is [0,50]
01:25:15 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:25:15 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:25:15 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:25:15 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 0
01:25:15 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 10
01:25:15 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 2
01:25:15 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:25:15 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:25:15 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:25:15 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 10
01:25:15 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 10] splitting invariant on x2==25 when range is [0,50]
01:25:15 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:25:15 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:25:15 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:25:15 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 0
01:25:15 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 11
01:25:15 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 2
01:25:15 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:25:15 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:25:15 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:25:15 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 11
01:25:15 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 11] splitting invariant on x1==25/2 when range is [0,25]
01:25:15 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:25:15 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:25:16 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:25:16 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 0
01:25:16 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 8
01:25:16 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 1
01:25:16 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:25:16 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:25:16 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:25:16 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 8
01:25:16 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 8] splitting invariant on x1==25 when range is [0,50]
01:25:16 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:25:16 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:25:16 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:25:16 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 0
01:25:16 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 13
01:25:16 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 1
01:25:16 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:25:16 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:25:16 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:25:16 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 13
01:25:16 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 13] splitting invariant on x2==25 when range is [0,50]
01:25:16 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:25:16 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:25:16 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:25:16 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 0
01:25:16 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 14
01:25:16 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 1
01:25:16 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:25:16 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:25:16 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:25:16 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 14
01:25:16 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 14] splitting invariant on x3==25/2 when range is [0,25]
01:25:17 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:25:17 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:25:17 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:25:17 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 0
01:25:17 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 3
01:25:17 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 3
01:25:17 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:25:17 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:25:17 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:25:17 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 3
01:25:17 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 3] splitting invariant on x1==25 when range is [0,50]
01:25:17 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:25:17 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:25:17 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:25:17 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 0
01:25:17 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 16
01:25:17 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 3
01:25:17 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:25:17 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:25:17 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:25:17 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 16
01:25:17 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 16] splitting invariant on x3==25 when range is [0,50]
01:25:17 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:25:17 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:25:17 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:25:18 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 0
01:25:18 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 17
01:25:18 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 3
01:25:18 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:25:18 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:25:18 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:25:18 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 17
01:25:18 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 17] splitting invariant on x2==25 when range is [0,50]
01:25:18 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:25:18 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:25:18 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:25:18 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 0
01:25:18 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 18
01:25:18 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 3
01:25:18 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:25:18 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:25:18 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:25:18 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 18
01:25:18 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 18] splitting invariant on x1==25/2 when range is [0,25]
01:25:18 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:25:18 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:25:21 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:25:21 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 2
01:25:21 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 18 --> 7 --> 14
01:25:21 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 3 --> 0 --> 1
01:25:21 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 3 -u 3 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:25:22 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:25:22 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:25:22 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:25:22 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:25:22 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:25:22 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:25:22 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 18
01:25:22 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 18] splitting invariant on x3==25/2 when range is [0,25]
01:25:22 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:25:22 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:25:24 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:25:24 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 2
01:25:24 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 11 --> 7 --> 14
01:25:24 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 2 --> 0 --> 1
01:25:24 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 3 -u 3 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:25:24 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:25:24 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:25:25 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:25:25 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:25:25 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:25:25 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:25:25 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 11
01:25:25 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 11] splitting invariant on x3==25/2 when range is [0,25]
01:25:25 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:25:25 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:25:27 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:25:27 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 2
01:25:27 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 6 --> 7 --> 14
01:25:27 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 0 --> 0 --> 1
01:25:27 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 3 -u 3 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:25:28 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:25:28 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:25:28 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:25:28 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:25:28 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:25:28 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:25:28 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 6
01:25:28 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 6] splitting invariant on x3==25/2 when range is [0,25]
01:25:28 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:25:28 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:25:39 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:25:39 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 3
01:25:39 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 18 --> 19 --> 4 --> 14
01:25:39 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 3 --> 3 --> 0 --> 1
01:25:39 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 4 -u 4 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:25:39 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:25:39 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 3 -u 3 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:25:39 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:25:39 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:25:40 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:25:40 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:25:40 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:25:40 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 1
01:25:40 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 19
01:25:40 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 19] splitting invariant on x3==25/2 when range is [0,25]
01:25:40 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:25:40 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:25:49 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:25:49 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 3
01:25:49 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 11 --> 12 --> 7 --> 14
01:25:49 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 2 --> 2 --> 0 --> 1
01:25:49 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 4 -u 4 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:25:49 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:25:49 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 3 -u 3 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:25:49 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:25:49 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:25:49 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:25:49 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:25:49 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:25:49 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:25:49 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 11
01:25:49 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 11] splitting invariant on x2==25/2 when range is [0,25]
01:25:49 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:25:49 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:25:56 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:25:56 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 3
01:25:56 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 11 --> 12 --> 7 --> 14
01:25:56 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 2 --> 2 --> 0 --> 1
01:25:56 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 4 -u 4 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:25:56 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:25:56 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 3 -u 3 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:25:56 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:25:56 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:25:56 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:25:56 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:25:56 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:25:56 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:25:56 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 11
01:25:56 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 11] splitting invariant on x1==75/4 when range is [25/2,25]
01:25:57 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:25:57 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:26:07 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:26:07 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 3
01:26:07 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 6 --> 12 --> 7 --> 14
01:26:07 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 0 --> 2 --> 0 --> 1
01:26:07 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 4 -u 4 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:26:07 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:26:07 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 3 -u 3 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:26:07 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:26:07 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:26:07 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:26:07 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:26:07 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:26:07 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:26:07 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 6
01:26:07 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 6] splitting invariant on x2==25/2 when range is [0,25]
01:26:07 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:26:08 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:26:19 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:26:19 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 3
01:26:19 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 6 --> 12 --> 7 --> 14
01:26:19 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 0 --> 2 --> 0 --> 1
01:26:19 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 4 -u 4 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:26:20 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:26:20 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 3 -u 3 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:26:20 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:26:20 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:26:20 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:26:20 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:26:20 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:26:20 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:26:20 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 6
01:26:20 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 6] splitting invariant on x1==75/4 when range is [25/2,25]
01:26:20 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:26:20 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:26:30 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:26:30 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 3
01:26:30 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 18 --> 7 --> 7 --> 14
01:26:30 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 3 --> 0 --> 0 --> 1
01:26:30 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 4 -u 4 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:26:30 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:26:30 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 3 -u 3 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:26:30 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:26:30 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:26:30 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:26:30 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:26:30 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:26:30 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:26:30 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 18
01:26:30 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 18] splitting invariant on x2==25/2 when range is [0,25]
01:26:30 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:26:30 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:27:00 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:27:00 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 4
01:27:00 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 6 --> 27 --> 12 --> 7 --> 14
01:27:00 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 0 --> 0 --> 2 --> 0 --> 1
01:27:00 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 5 -u 5 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:27:00 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:27:00 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 4 -u 4 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:27:00 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:27:00 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 3 -u 3 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:27:00 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:27:00 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:27:01 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:27:01 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:27:01 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:27:01 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 1
01:27:01 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 27
01:27:01 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 27] splitting invariant on x3==75/4 when range is [25/2,25]
01:27:01 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:27:01 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:27:43 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:27:43 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 4
01:27:43 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 14 --> 26 --> 7 --> 7 --> 14
01:27:43 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 1 --> 0 --> 0 --> 0 --> 1
01:27:43 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 5 -u 5 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:27:44 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:27:44 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 4 -u 4 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:27:44 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:27:44 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 3 -u 3 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:27:44 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:27:44 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:27:44 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:27:44 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:27:44 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:27:44 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:27:44 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 14
01:27:44 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 14] splitting invariant on x1==25/2 when range is [0,25]
01:27:44 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:27:44 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:41:33 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:41:33 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:41:33 [main.cpp:check:47] heater-04 is SAFE
01:41:33 [main.cpp:check:43] checking heater-05
01:41:33 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:41:33 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:41:33 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:41:33 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:41:33 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:41:33 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 0
01:41:33 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 0
01:41:33 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 0
01:41:33 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:41:33 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:41:33 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:41:33 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 0
01:41:33 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 0] splitting invariant on x3==25 when range is [0,50]
01:41:33 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:41:34 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:41:34 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:41:34 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 0
01:41:34 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 1
01:41:34 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 1
01:41:34 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:41:34 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:41:34 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:41:34 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 1
01:41:34 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 1] splitting invariant on x1==25 when range is [0,50]
01:41:34 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:41:34 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:41:34 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:41:34 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 0
01:41:34 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 2
01:41:34 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 2
01:41:34 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:41:34 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:41:34 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:41:34 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 2
01:41:34 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 2] splitting invariant on x3==25 when range is [0,50]
01:41:34 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:41:34 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:41:34 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:41:34 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 0
01:41:34 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 3
01:41:34 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 3
01:41:34 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:41:34 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:41:34 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:41:34 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 3
01:41:34 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 3] splitting invariant on x3==25 when range is [0,50]
01:41:34 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:41:35 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:41:35 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:41:35 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 1
01:41:35 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 0 --> 7
01:41:35 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 0 --> 3
01:41:35 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:41:35 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:41:35 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:41:35 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:41:35 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 1
01:41:35 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 7
01:41:35 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 7] splitting invariant on x1==25 when range is [0,50]
01:41:35 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:41:35 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:41:35 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:41:35 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 1
01:41:35 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 0 --> 8
01:41:35 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 0 --> 3
01:41:35 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:41:35 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:41:35 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:41:35 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:41:35 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:41:35 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 0
01:41:35 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 0] splitting invariant on x1==25 when range is [0,50]
01:41:35 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:41:36 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:41:36 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:41:36 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 1
01:41:36 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 1 --> 5
01:41:36 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 1 --> 1
01:41:36 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:41:36 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:41:36 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:41:36 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:41:36 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 1
01:41:36 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 5
01:41:36 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 5] splitting invariant on x3==25 when range is [0,50]
01:41:36 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:41:36 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:41:36 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:41:36 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 1
01:41:36 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 1 --> 10
01:41:36 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 1 --> 1
01:41:36 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:41:36 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:41:36 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:41:36 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:41:36 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 1
01:41:36 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 10
01:41:36 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 10] splitting invariant on x2==25 when range is [0,50]
01:41:36 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:41:37 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:41:37 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:41:37 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 1
01:41:37 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 0 --> 8
01:41:37 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 0 --> 3
01:41:37 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:41:37 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:41:37 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:41:37 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:41:37 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:41:37 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 0
01:41:37 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 0] splitting invariant on x2==25 when range is [0,50]
01:41:37 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:41:37 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:41:37 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:41:37 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 1
01:41:37 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 12 --> 8
01:41:37 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 0 --> 3
01:41:37 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:41:38 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:41:38 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:41:38 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:41:38 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:41:38 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 12
01:41:38 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 12] splitting invariant on x3==75/2 when range is [25,50]
01:41:38 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:41:38 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:41:38 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:41:38 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 1
01:41:38 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 13 --> 8
01:41:38 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 0 --> 3
01:41:38 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:41:38 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:41:38 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:41:38 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:41:38 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:41:38 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 13
01:41:38 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 13] splitting invariant on x1==75/2 when range is [25,50]
01:41:38 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:41:38 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:41:39 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:41:39 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 1
01:41:39 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 14 --> 8
01:41:39 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 0 --> 3
01:41:39 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:41:39 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:41:39 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:41:39 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:41:39 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:41:39 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 14
01:41:39 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 14] splitting invariant on x2==25/2 when range is [0,25]
01:41:39 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:41:39 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:41:40 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:41:40 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 1
01:41:40 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 14 --> 8
01:41:40 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 0 --> 3
01:41:40 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:41:40 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:41:40 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:41:40 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:41:40 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:41:40 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 14
01:41:40 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 14] splitting invariant on x3==125/4 when range is [25,75/2]
01:41:40 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:41:40 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:41:40 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:41:40 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 1
01:41:40 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 16 --> 8
01:41:40 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 0 --> 3
01:41:40 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:41:41 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:41:41 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:41:41 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:41:41 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:41:41 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 16
01:41:41 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 16] splitting invariant on x1==125/4 when range is [25,75/2]
01:41:41 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:41:41 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:41:41 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:41:41 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 1
01:41:41 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 17 --> 8
01:41:41 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 0 --> 3
01:41:41 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:41:41 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:41:41 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:41:41 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:41:41 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:41:41 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 17
01:41:41 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 17] splitting invariant on x2==75/4 when range is [25/2,25]
01:41:41 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:41:42 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:41:42 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:41:42 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 1
01:41:42 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 18 --> 8
01:41:42 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 0 --> 3
01:41:42 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:41:42 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:41:42 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:41:42 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:41:42 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:41:42 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 18
01:41:42 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 18] splitting invariant on x3==225/8 when range is [25,125/4]
01:41:42 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:41:42 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:41:43 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:41:43 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 1
01:41:43 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 19 --> 6
01:41:43 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 0 --> 2
01:41:43 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:41:43 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:41:43 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:41:43 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:41:43 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 1
01:41:43 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 6
01:41:43 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 6] splitting invariant on x1==25 when range is [0,50]
01:41:43 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:41:43 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:41:44 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:41:44 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 1
01:41:44 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 19 --> 20
01:41:44 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 0 --> 2
01:41:44 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:41:44 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:41:44 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:41:44 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:41:44 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:41:44 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 19
01:41:44 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 19] splitting invariant on x1==225/8 when range is [25,125/4]
01:41:44 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:41:44 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:41:45 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:41:45 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 1
01:41:45 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 21 --> 20
01:41:45 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 0 --> 2
01:41:45 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:41:45 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:41:45 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:41:45 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:41:45 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:41:45 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 21
01:41:45 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 21] splitting invariant on x2==125/8 when range is [25/2,75/4]
01:41:45 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:41:45 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:41:46 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:41:46 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 1
01:41:46 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 21 --> 20
01:41:46 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 0 --> 2
01:41:46 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:41:46 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:41:46 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:41:46 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:41:46 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:41:46 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 21
01:41:46 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 21] splitting invariant on x3==425/16 when range is [25,225/8]
01:41:46 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:41:46 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:41:47 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:41:47 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 1
01:41:47 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 3 --> 8
01:41:47 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 3 --> 3
01:41:47 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:41:47 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:41:47 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:41:47 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:41:47 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 1
01:41:47 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 8
01:41:47 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 8] splitting invariant on x2==25 when range is [0,50]
01:41:47 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:41:47 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:41:47 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:41:48 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 1
01:41:48 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 2 --> 20
01:41:48 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 2 --> 2
01:41:48 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:41:48 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:41:48 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:41:48 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:41:48 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:41:48 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 2
01:41:48 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 2] splitting invariant on x1==25 when range is [0,50]
01:41:48 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:41:48 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:41:48 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:41:48 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 1
01:41:48 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 2 --> 20
01:41:48 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 2 --> 2
01:41:48 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:41:48 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:41:48 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:41:48 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:41:48 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:41:48 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 2
01:41:48 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 2] splitting invariant on x2==25 when range is [0,50]
01:41:49 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:41:49 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:41:50 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:41:50 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 1
01:41:50 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 26 --> 20
01:41:50 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 2 --> 2
01:41:50 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:41:50 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:41:50 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:41:50 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:41:50 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:41:50 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 26
01:41:50 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 26] splitting invariant on x3==75/2 when range is [25,50]
01:41:50 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:41:50 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:41:51 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:41:51 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 1
01:41:51 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 1 --> 4
01:41:51 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 1 --> 0
01:41:51 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:41:51 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:41:51 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:41:51 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:41:51 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 1
01:41:51 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 4
01:41:51 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 4] splitting invariant on x1==25 when range is [0,50]
01:41:51 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:41:52 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:41:53 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:41:53 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 1
01:41:53 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 27 --> 20
01:41:53 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 2 --> 2
01:41:53 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:41:53 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:41:53 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:41:53 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:41:53 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:41:53 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 27
01:41:53 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 27] splitting invariant on x1==75/2 when range is [25,50]
01:41:53 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:41:53 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:41:54 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:41:54 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 1
01:41:54 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 1 --> 28
01:41:54 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 1 --> 0
01:41:54 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:41:54 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:41:54 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:41:55 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:41:55 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 1
01:41:55 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 28
01:41:55 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 28] splitting invariant on x2==25 when range is [0,50]
01:41:55 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:41:55 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:41:56 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:41:56 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 1
01:41:56 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 29 --> 20
01:41:56 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 2 --> 2
01:41:56 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:41:56 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:41:56 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:41:57 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:41:57 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:41:57 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 29
01:41:57 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 29] splitting invariant on x2==25/2 when range is [0,25]
01:41:57 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:41:57 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:41:58 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:41:58 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 1
01:41:58 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 29 --> 20
01:41:58 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 2 --> 2
01:41:58 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:41:58 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:41:58 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:41:59 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:41:59 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:41:59 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 29
01:41:59 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 29] splitting invariant on x3==125/4 when range is [25,75/2]
01:41:59 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:41:59 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:42:00 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:42:00 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 1
01:42:00 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 32 --> 20
01:42:00 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 2 --> 2
01:42:00 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:42:01 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:42:01 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:42:01 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:42:01 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:42:01 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 32
01:42:01 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 32] splitting invariant on x1==125/4 when range is [25,75/2]
01:42:01 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:42:01 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:42:01 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:42:01 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 1
01:42:01 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 33 --> 20
01:42:01 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 2 --> 2
01:42:01 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:42:01 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:42:01 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:42:02 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:42:02 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:42:02 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 33
01:42:02 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 33] splitting invariant on x2==75/4 when range is [25/2,25]
01:42:02 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:42:02 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:42:03 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:42:03 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 1
01:42:03 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 34 --> 20
01:42:03 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 2 --> 2
01:42:03 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:42:03 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:42:03 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:42:03 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:42:03 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:42:03 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 34
01:42:03 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 34] splitting invariant on x3==225/8 when range is [25,125/4]
01:42:03 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:42:04 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:42:05 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:42:05 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 1
01:42:05 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 35 --> 20
01:42:05 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 2 --> 2
01:42:05 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:42:05 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:42:05 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:42:05 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:42:05 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:42:05 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 35
01:42:05 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 35] splitting invariant on x1==225/8 when range is [25,125/4]
01:42:05 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:42:06 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:42:07 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:42:07 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 1
01:42:07 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 36 --> 20
01:42:07 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 2 --> 2
01:42:07 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:42:07 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:42:07 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:42:07 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:42:07 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:42:07 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 36
01:42:07 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 36] splitting invariant on x2==125/8 when range is [25/2,75/4]
01:42:08 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:42:08 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:42:09 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:42:09 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 1
01:42:09 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 36 --> 20
01:42:09 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 2 --> 2
01:42:09 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:42:09 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:42:09 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:42:10 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:42:10 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:42:10 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 36
01:42:10 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 36] splitting invariant on x3==425/16 when range is [25,225/8]
01:42:10 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:42:10 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:42:12 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:42:13 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 2
01:42:13 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 1 --> 30 --> 20
01:42:13 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 1 --> 0 --> 2
01:42:13 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 3 -u 3 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:42:13 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:42:13 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:42:13 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:42:13 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 2
01:42:13 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 20
01:42:13 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 20] splitting invariant on x2==25 when range is [0,50]
01:42:13 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:42:13 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:42:16 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:42:17 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 2
01:42:17 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 1 --> 5 --> 10
01:42:17 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 1 --> 1 --> 1
01:42:17 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 3 -u 3 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:42:17 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:42:17 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:42:17 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:42:17 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:42:17 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:42:17 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:42:17 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 1
01:42:17 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 1] splitting invariant on x3==25 when range is [0,50]
01:42:17 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:42:17 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:42:36 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:42:36 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:42:36 [main.cpp:check:47] heater-05 is SAFE
01:42:36 [main.cpp:check:43] checking heater-09
01:42:36 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:42:36 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:42:36 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:42:36 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:42:36 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:42:36 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 0
01:42:36 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 0
01:42:36 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 0
01:42:36 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:42:36 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:42:36 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:42:36 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 0
01:42:36 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 0] splitting invariant on x3==25 when range is [0,50]
01:42:36 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:42:37 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:42:37 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:42:37 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 0
01:42:37 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 1
01:42:37 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 1
01:42:37 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:42:37 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:42:37 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:42:37 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 1
01:42:37 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 1] splitting invariant on x1==25 when range is [0,50]
01:42:37 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:42:37 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:42:37 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:42:37 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 0
01:42:37 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 5
01:42:37 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 1
01:42:37 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:42:37 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:42:37 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:42:37 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 5
01:42:37 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 5] splitting invariant on x3==25 when range is [0,50]
01:42:37 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:42:37 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:42:37 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:42:37 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 0
01:42:37 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 2
01:42:37 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 2
01:42:37 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:42:37 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:42:37 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:42:37 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 2
01:42:37 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 2] splitting invariant on x3==25 when range is [0,50]
01:42:37 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:42:38 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:42:38 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:42:38 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 0
01:42:38 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 3
01:42:38 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 3
01:42:38 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:42:38 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:42:38 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:42:38 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 3
01:42:38 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 3] splitting invariant on x3==25 when range is [0,50]
01:42:38 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:42:38 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:42:38 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:42:38 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 1
01:42:38 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 0 --> 8
01:42:38 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 0 --> 3
01:42:38 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:42:38 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:42:38 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:42:38 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:42:38 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 1
01:42:38 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 8
01:42:38 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 8] splitting invariant on x1==25 when range is [0,50]
01:42:38 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:42:39 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:42:39 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:42:39 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 1
01:42:39 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 0 --> 9
01:42:39 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 0 --> 3
01:42:39 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:42:39 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:42:39 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:42:39 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:42:39 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 1
01:42:39 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 9
01:42:39 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 9] splitting invariant on x2==25 when range is [0,50]
01:42:39 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:42:39 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:42:39 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:42:39 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 1
01:42:39 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 0 --> 7
01:42:39 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 0 --> 2
01:42:39 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:42:39 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:42:39 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:42:39 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:42:39 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:42:39 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 0
01:42:39 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 0] splitting invariant on x1==25 when range is [0,50]
01:42:40 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:42:40 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:42:40 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:42:40 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 1
01:42:40 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 5 --> 6
01:42:40 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 1 --> 1
01:42:40 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:42:40 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:42:40 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:42:40 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:42:40 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 1
01:42:40 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 6
01:42:40 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 6] splitting invariant on x2==25 when range is [0,50]
01:42:40 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:42:40 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:42:41 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:42:41 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 1
01:42:41 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 11 --> 7
01:42:41 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 0 --> 2
01:42:41 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:42:41 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:42:41 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:42:41 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:42:41 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:42:41 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 11
01:42:41 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 11] splitting invariant on x2==25 when range is [0,50]
01:42:41 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:42:41 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:42:41 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:42:41 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 1
01:42:41 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 2 --> 7
01:42:41 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 2 --> 2
01:42:41 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:42:41 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:42:41 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:42:41 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:42:41 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 1
01:42:41 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 7
01:42:41 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 7] splitting invariant on x1==25 when range is [0,50]
01:42:41 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:42:42 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:42:42 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:42:42 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 1
01:42:42 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 2 --> 14
01:42:42 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 2 --> 2
01:42:42 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:42:42 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:42:42 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:42:42 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:42:42 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 1
01:42:42 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 14
01:42:42 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 14] splitting invariant on x2==25 when range is [0,50]
01:42:42 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:42:42 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:42:43 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:42:43 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 1
01:42:43 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 11 --> 4
01:42:43 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 0 --> 0
01:42:43 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:42:43 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:42:43 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:42:43 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:42:43 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 1
01:42:43 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 4
01:42:43 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 4] splitting invariant on x1==25 when range is [0,50]
01:42:43 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:42:43 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:42:44 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:42:44 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 1
01:42:44 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 11 --> 16
01:42:44 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 0 --> 0
01:42:44 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:42:44 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:42:44 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:42:44 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:42:44 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 1
01:42:44 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 16
01:42:44 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 16] splitting invariant on x2==25 when range is [0,50]
01:42:44 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:42:44 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:43:31 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:43:31 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:43:31 [main.cpp:check:47] heater-09 is SAFE
01:43:31 [main.cpp:check:43] checking heater-12
01:43:31 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:43:31 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:43:31 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:43:31 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:43:31 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:43:31 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 0
01:43:31 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 0
01:43:31 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 0
01:43:31 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:31 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:31 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:43:31 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 0
01:43:31 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 0] splitting invariant on x3==25 when range is [0,50]
01:43:31 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:43:32 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:43:32 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:43:32 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 0
01:43:32 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 4
01:43:32 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 0
01:43:32 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:32 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:32 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:43:32 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 4
01:43:32 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 4] splitting invariant on x1==25 when range is [0,50]
01:43:32 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:43:32 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:43:32 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:43:32 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 0
01:43:32 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 1
01:43:32 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 1
01:43:32 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:32 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:32 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 1
01:43:32 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? UNSAFE)
01:43:32 [main.cpp:check:47] heater-12 is UNSAFE
01:43:32 [main.cpp:check:43] checking nav-01
01:43:32 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:43:32 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:43:32 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:43:32 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:43:33 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:43:33 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 6
01:43:33 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 15 --> 10 --> 5 --> 6 --> 7 --> 2 --> 3
01:43:33 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 15 --> 10 --> 5 --> 6 --> 7 --> 2 --> 3
01:43:33 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 7 -u 7 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:33 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:33 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 6 -u 6 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:33 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:33 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 5 -u 5 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:34 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:34 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 4 -u 4 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:34 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:34 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 3 -u 3 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:34 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:34 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:34 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:34 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:34 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:34 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:43:34 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 15
01:43:34 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 15] splitting invariant on vy==0 when range is [-2,2]
01:43:34 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:43:34 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:43:35 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:43:35 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 6
01:43:35 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 15 --> 16 --> 11 --> 6 --> 1 --> 2 --> 3
01:43:35 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 15 --> 16 --> 11 --> 6 --> 1 --> 2 --> 3
01:43:35 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 7 -u 7 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:35 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:35 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 6 -u 6 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:35 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:35 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 5 -u 5 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:35 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:35 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 4 -u 4 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:36 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:36 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 3 -u 3 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:36 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:36 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:36 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:36 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:36 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:36 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:43:36 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 15
01:43:36 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 15] splitting invariant on vx==0 when range is [-2,2]
01:43:36 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:43:36 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:43:37 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:43:37 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 7
01:43:37 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 26 --> 25 --> 10 --> 5 --> 0 --> 1 --> 2 --> 3
01:43:37 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 15 --> 15 --> 10 --> 5 --> 0 --> 1 --> 2 --> 3
01:43:37 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 8 -u 8 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:37 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:37 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 7 -u 7 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:38 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:38 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 6 -u 6 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:38 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:38 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 5 -u 5 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:38 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:38 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 4 -u 4 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:38 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:38 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 3 -u 3 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:38 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:38 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:38 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:38 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:38 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:38 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:43:38 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 26
01:43:38 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 26] splitting invariant on vy==1 when range is [0,2]
01:43:38 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:43:38 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:43:40 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:43:40 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 7
01:43:40 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 27 --> 25 --> 10 --> 5 --> 6 --> 7 --> 2 --> 3
01:43:40 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 15 --> 15 --> 10 --> 5 --> 6 --> 7 --> 2 --> 3
01:43:40 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 8 -u 8 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:40 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:40 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 7 -u 7 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:40 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:40 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 6 -u 6 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:40 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:40 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 5 -u 5 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:40 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:40 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 4 -u 4 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:41 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:41 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 3 -u 3 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:41 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:41 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:41 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:41 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:41 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:41 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:43:41 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 27
01:43:41 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 27] splitting invariant on vx==-1 when range is [-2,0]
01:43:41 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:43:41 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:43:42 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:43:42 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 7
01:43:42 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 27 --> 25 --> 16 --> 11 --> 6 --> 7 --> 8 --> 3
01:43:42 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 15 --> 15 --> 16 --> 11 --> 6 --> 7 --> 8 --> 3
01:43:42 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 8 -u 8 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:43 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:43 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 7 -u 7 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:43 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:43 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 6 -u 6 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:43 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:43 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 5 -u 5 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:43 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:43 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 4 -u 4 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:43 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:43 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 3 -u 3 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:43 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:43 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:44 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:44 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:44 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:44 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:43:44 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 27
01:43:44 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 27] splitting invariant on vy==1/2 when range is [0,1]
01:43:44 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:43:44 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:43:45 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:43:45 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 8
01:43:45 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 27 --> 20 --> 25 --> 10 --> 11 --> 12 --> 7 --> 8 --> 3
01:43:45 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 15 --> 20 --> 15 --> 10 --> 11 --> 12 --> 7 --> 8 --> 3
01:43:45 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 9 -u 9 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:46 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:46 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 8 -u 8 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:46 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:46 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 7 -u 7 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:46 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:46 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 6 -u 6 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:46 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:46 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 5 -u 5 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:46 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:46 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 4 -u 4 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:46 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:46 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 3 -u 3 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:47 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:47 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:47 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:47 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:47 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:47 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:43:47 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 27
01:43:47 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 27] splitting invariant on vx==-1/2 when range is [-1,0]
01:43:47 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:43:47 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:43:49 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:43:49 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 8
01:43:49 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 26 --> 20 --> 25 --> 10 --> 11 --> 12 --> 7 --> 8 --> 3
01:43:49 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 15 --> 20 --> 15 --> 10 --> 11 --> 12 --> 7 --> 8 --> 3
01:43:49 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 9 -u 9 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:49 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:49 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 8 -u 8 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:49 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:49 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 7 -u 7 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:49 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:49 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 6 -u 6 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:49 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:49 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 5 -u 5 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:50 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:50 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 4 -u 4 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:50 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:50 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 3 -u 3 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:50 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:50 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:50 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:50 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:50 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:50 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:43:50 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 26
01:43:50 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 26] splitting invariant on vx==-1 when range is [-2,0]
01:43:50 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:43:50 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:43:52 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:43:52 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 8
01:43:52 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 26 --> 20 --> 21 --> 22 --> 17 --> 12 --> 7 --> 2 --> 3
01:43:52 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 15 --> 20 --> 21 --> 22 --> 17 --> 12 --> 7 --> 2 --> 3
01:43:52 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 9 -u 9 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:52 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:52 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 8 -u 8 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:53 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:53 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 7 -u 7 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:53 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:53 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 6 -u 6 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:53 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:53 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 5 -u 5 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:53 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:53 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 4 -u 4 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:53 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:53 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 3 -u 3 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:53 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:53 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:53 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:53 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:53 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:53 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:43:53 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 26
01:43:53 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 26] splitting invariant on vy==3/2 when range is [1,2]
01:43:53 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:43:53 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:43:56 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:43:56 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 8
01:43:56 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 32 --> 20 --> 21 --> 22 --> 17 --> 12 --> 7 --> 2 --> 3
01:43:56 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 15 --> 20 --> 21 --> 22 --> 17 --> 12 --> 7 --> 2 --> 3
01:43:56 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 9 -u 9 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:56 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:56 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 8 -u 8 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:56 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:56 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 7 -u 7 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:56 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:56 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 6 -u 6 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:57 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:57 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 5 -u 5 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:57 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:57 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 4 -u 4 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:57 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:57 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 3 -u 3 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:57 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:57 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:57 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:57 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:43:57 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:43:57 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:43:57 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 32
01:43:57 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 32] splitting invariant on vx==-1/2 when range is [-1,0]
01:43:57 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:43:57 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:43:59 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:44:00 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 8
01:44:00 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 33 --> 20 --> 25 --> 10 --> 11 --> 12 --> 7 --> 2 --> 3
01:44:00 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 15 --> 20 --> 15 --> 10 --> 11 --> 12 --> 7 --> 2 --> 3
01:44:00 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 9 -u 9 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:00 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:00 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 8 -u 8 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:00 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:00 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 7 -u 7 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:00 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:00 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 6 -u 6 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:00 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:00 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 5 -u 5 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:00 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:00 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 4 -u 4 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:01 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:01 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 3 -u 3 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:01 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:01 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:01 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:01 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:01 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:01 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:44:01 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 33
01:44:01 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 33] splitting invariant on vy==5/4 when range is [1,3/2]
01:44:01 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:44:01 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:44:01 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:44:01 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:44:01 [main.cpp:check:47] nav-01 is SAFE
01:44:01 [main.cpp:check:43] checking nav-02
01:44:01 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:44:01 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:44:01 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:44:01 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:44:02 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:44:02 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 4
01:44:02 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 9 --> 8 --> 7 --> 6 --> 5
01:44:02 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 9 --> 8 --> 7 --> 6 --> 5
01:44:02 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 5 -u 5 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:02 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:02 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 5
01:44:02 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? UNSAFE)
01:44:02 [main.cpp:check:47] nav-02 is UNSAFE
01:44:02 [main.cpp:check:43] checking nav-03
01:44:02 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:44:02 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:44:02 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:44:02 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:44:06 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:44:06 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 6
01:44:06 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 12 --> 8 --> 4 --> 5 --> 6 --> 2 --> 3
01:44:06 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 12 --> 8 --> 4 --> 5 --> 6 --> 2 --> 3
01:44:06 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 7 -u 7 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:30 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:30 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 7
01:44:30 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? UNSAFE)
01:44:30 [main.cpp:check:47] nav-03 is UNSAFE
01:44:30 [main.cpp:check:43] checking nav-04
01:44:30 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:44:30 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:44:30 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:44:30 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:44:30 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:44:30 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 3
01:44:30 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 1 --> 3 --> 2 --> 0
01:44:30 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 1 --> 3 --> 2 --> 0
01:44:30 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 4 -u 4 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:30 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:30 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 3 -u 3 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:30 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:30 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:30 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:30 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:31 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:31 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:44:31 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 1
01:44:31 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 1] splitting invariant on vy==0 when range is [-2,2]
01:44:31 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:44:31 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:44:31 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:44:31 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 3
01:44:31 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 1 --> 3 --> 2 --> 0
01:44:31 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 1 --> 3 --> 2 --> 0
01:44:31 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 4 -u 4 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:31 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:31 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 3 -u 3 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:31 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:31 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:31 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:31 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:31 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:31 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:44:31 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 1
01:44:31 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 1] splitting invariant on vx==0 when range is [-2,2]
01:44:31 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:44:31 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:44:32 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:44:32 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 3
01:44:32 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 1 --> 3 --> 2 --> 0
01:44:32 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 1 --> 3 --> 2 --> 0
01:44:32 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 4 -u 4 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:32 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:32 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 3 -u 3 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:32 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:32 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:32 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:32 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:32 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:32 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:44:32 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 1
01:44:32 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 1] splitting invariant on vy==1 when range is [0,2]
01:44:32 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:44:32 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:44:32 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:44:32 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 3
01:44:32 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 6 --> 3 --> 2 --> 0
01:44:32 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 1 --> 3 --> 2 --> 0
01:44:33 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 4 -u 4 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:33 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:33 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 3 -u 3 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:33 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:33 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:33 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:33 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:33 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:33 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 1
01:44:33 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 6
01:44:33 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 6] splitting invariant on vx==1 when range is [0,2]
01:44:33 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:44:33 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:44:34 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:44:34 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 3
01:44:34 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 1 --> 3 --> 2 --> 0
01:44:34 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 1 --> 3 --> 2 --> 0
01:44:34 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 4 -u 4 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:34 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:34 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 3 -u 3 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:34 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:34 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:34 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:34 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:34 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:34 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 1
01:44:34 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 1
01:44:34 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 1] splitting invariant on vx==1 when range is [0,2]
01:44:34 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:44:34 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:44:35 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:44:36 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:44:36 [main.cpp:check:47] nav-04 is SAFE
01:44:36 [main.cpp:check:43] checking nav-05
01:44:36 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:44:36 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:44:36 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:44:36 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:44:36 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:44:36 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 4
01:44:36 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 2 --> 1 --> 4 --> 3 --> 6
01:44:36 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 2 --> 1 --> 4 --> 3 --> 6
01:44:36 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 5 -u 5 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:36 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:36 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 4 -u 4 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:36 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:36 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 3 -u 3 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:37 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:37 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:37 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:37 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:37 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:37 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:44:37 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 2
01:44:37 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 2] splitting invariant on vy==0 when range is [-2,2]
01:44:37 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:44:37 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:44:37 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:44:37 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 4
01:44:37 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 9 --> 1 --> 0 --> 3 --> 6
01:44:37 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 2 --> 1 --> 0 --> 3 --> 6
01:44:37 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 5 -u 5 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:37 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:37 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 4 -u 4 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:37 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:37 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 3 -u 3 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:37 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:37 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:38 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:38 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:38 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:38 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:44:38 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 9
01:44:38 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 9] splitting invariant on vx==0 when range is [-2,2]
01:44:38 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:44:38 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:44:38 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:44:38 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:44:38 [main.cpp:check:47] nav-05 is SAFE
01:44:38 [main.cpp:check:43] checking nav-06
01:44:38 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:44:38 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:44:38 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:44:38 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:44:38 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:44:38 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 3
01:44:38 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 2 --> 5 --> 8 --> 7
01:44:38 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 2 --> 5 --> 8 --> 7
01:44:38 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 4 -u 4 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:38 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:38 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 3 -u 3 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:39 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:39 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:39 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:39 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:39 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:39 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:44:39 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 2
01:44:39 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 2] splitting invariant on vx==0 when range is [-2,2]
01:44:39 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:44:39 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:44:39 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:44:39 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 3
01:44:39 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 2 --> 5 --> 4 --> 7
01:44:39 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 2 --> 5 --> 4 --> 7
01:44:39 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 4 -u 4 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:39 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:39 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 3 -u 3 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:39 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:39 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:40 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:40 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:40 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:40 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:44:40 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 2
01:44:40 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 2] splitting invariant on vy==0 when range is [-2,2]
01:44:40 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:44:40 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:44:40 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:44:40 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 4
01:44:40 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 10 --> 9 --> 5 --> 8 --> 7
01:44:40 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 2 --> 2 --> 5 --> 8 --> 7
01:44:40 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 5 -u 5 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:40 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:40 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 4 -u 4 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:40 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:40 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 3 -u 3 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:41 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:41 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:41 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:41 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:41 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:41 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:44:41 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 10
01:44:41 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 10] splitting invariant on vx==1 when range is [0,2]
01:44:41 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:44:41 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:44:41 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:44:41 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 4
01:44:41 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 11 --> 9 --> 5 --> 8 --> 7
01:44:41 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 2 --> 2 --> 5 --> 8 --> 7
01:44:41 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 5 -u 5 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:42 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:42 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 4 -u 4 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:42 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:42 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 3 -u 3 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:42 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:42 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:42 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:42 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:42 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:42 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:44:42 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 11
01:44:42 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 11] splitting invariant on vy==-1 when range is [-2,0]
01:44:42 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:44:42 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:44:43 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:44:43 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 4
01:44:43 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 11 --> 9 --> 5 --> 8 --> 7
01:44:43 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 2 --> 2 --> 5 --> 8 --> 7
01:44:43 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 5 -u 5 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:43 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:43 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 4 -u 4 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:43 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:43 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 3 -u 3 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:43 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:43 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:43 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:43 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:43 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:43 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:44:43 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 11
01:44:43 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 11] splitting invariant on vx==1/2 when range is [0,1]
01:44:43 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:44:44 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:44:44 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:44:44 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 5
01:44:44 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 11 --> 13 --> 9 --> 5 --> 4 --> 7
01:44:44 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 2 --> 2 --> 2 --> 5 --> 4 --> 7
01:44:44 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 6 -u 6 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:44 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:44 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 5 -u 5 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:44 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:44 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 4 -u 4 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:45 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:45 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 3 -u 3 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:45 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:45 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:45 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:45 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:44:45 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:44:45 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:44:45 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 11
01:44:45 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 11] splitting invariant on vy==-1/2 when range is [-1,0]
01:44:45 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:44:45 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:44:45 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:44:45 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:44:45 [main.cpp:check:47] nav-06 is SAFE
01:44:45 [main.cpp:check:43] checking nav-07
01:44:45 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:44:45 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:44:45 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:44:45 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:44:45 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:44:45 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 2
01:44:45 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 12 --> 8 --> 9
01:44:45 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 12 --> 8 --> 9
01:44:45 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 3 -u 3 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:45:11 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:45:11 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 3
01:45:11 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? UNSAFE)
01:45:11 [main.cpp:check:47] nav-07 is UNSAFE
01:45:11 [main.cpp:check:43] checking nav-08
01:45:11 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:45:11 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:45:11 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:45:11 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:45:11 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:45:11 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:45:11 [main.cpp:check:47] nav-08 is SAFE
01:45:11 [main.cpp:check:43] checking nav-09
01:45:11 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:45:11 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:45:11 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:45:11 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:45:12 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:45:12 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:45:12 [main.cpp:check:47] nav-09 is SAFE
01:45:12 [main.cpp:check:43] checking nav-10
01:45:12 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:45:12 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:45:12 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:45:12 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:45:12 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:45:12 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:45:12 [main.cpp:check:47] nav-10 is SAFE
01:45:12 [main.cpp:check:43] checking nav-11
01:45:12 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:45:12 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:45:12 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:45:12 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:45:12 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:45:12 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:45:12 [main.cpp:check:47] nav-11 is SAFE
01:45:12 [main.cpp:check:43] checking nav-12
01:45:12 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:45:12 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:45:12 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:45:12 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:45:13 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:45:13 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:45:13 [main.cpp:check:47] nav-12 is SAFE
01:45:13 [main.cpp:check:43] checking nav-13
01:45:13 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:45:13 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:45:13 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:45:13 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:45:13 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:45:13 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:45:13 [main.cpp:check:47] nav-13 is SAFE
01:45:13 [main.cpp:check:43] checking nav-14
01:45:13 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:45:13 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:45:13 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:45:13 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:45:13 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:45:13 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:45:13 [main.cpp:check:47] nav-14 is SAFE
01:45:13 [main.cpp:check:43] checking nav-15
01:45:13 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:45:13 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:45:13 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:45:13 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:45:13 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:45:13 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:45:13 [main.cpp:check:47] nav-15 is SAFE
01:45:13 [main.cpp:check:43] checking nav-16
01:45:13 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:45:13 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:45:13 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:45:13 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:45:15 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:45:15 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:45:15 [main.cpp:check:47] nav-16 is SAFE
01:45:15 [main.cpp:check:43] checking nav-17
01:45:15 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:45:15 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:45:15 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:45:15 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:45:16 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:45:16 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:45:16 [main.cpp:check:47] nav-17 is SAFE
01:45:16 [main.cpp:check:43] checking nav-18
01:45:16 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:45:16 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:45:16 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:45:16 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:45:17 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:45:17 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:45:17 [main.cpp:check:47] nav-18 is SAFE
01:45:17 [main.cpp:check:43] checking nav-19
01:45:17 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:45:17 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:45:17 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:45:17 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:45:18 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:45:18 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:45:18 [main.cpp:check:47] nav-19 is SAFE
01:45:18 [main.cpp:check:43] checking nav-20
01:45:18 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:45:18 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:45:18 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:45:19 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:45:20 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:45:20 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:45:20 [main.cpp:check:47] nav-20 is SAFE
01:45:20 [main.cpp:check:43] checking nav-21
01:45:20 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:45:20 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:45:20 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:45:20 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:45:21 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:45:21 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:45:21 [main.cpp:check:47] nav-21 is SAFE
01:45:21 [main.cpp:check:43] checking nav-22
01:45:21 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:45:21 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:45:21 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:45:21 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:45:21 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:45:21 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:45:21 [main.cpp:check:47] nav-22 is SAFE
01:45:21 [main.cpp:check:43] checking nav-23
01:45:22 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:45:22 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:45:22 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:45:22 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:45:22 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:45:22 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:45:22 [main.cpp:check:47] nav-23 is SAFE
01:45:22 [main.cpp:check:43] checking nav-24
01:45:22 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:45:22 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:45:22 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:45:22 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:45:22 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:45:22 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:45:22 [main.cpp:check:47] nav-24 is SAFE
01:45:22 [main.cpp:check:43] checking nav-25
01:45:22 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:45:22 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:45:23 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:45:23 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:45:23 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:45:23 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:45:23 [main.cpp:check:47] nav-25 is SAFE
01:45:23 [main.cpp:check:43] checking nav-26
01:45:23 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:45:23 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:45:23 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:45:23 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:45:23 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:45:23 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:45:23 [main.cpp:check:47] nav-26 is SAFE
01:45:23 [main.cpp:check:43] checking nav-27
01:45:23 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:45:23 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:45:23 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:45:23 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:45:24 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:45:24 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:45:24 [main.cpp:check:47] nav-27 is SAFE
01:45:24 [main.cpp:check:43] checking nav-28
01:45:24 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:45:24 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:45:24 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:45:24 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:45:24 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:45:24 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:45:24 [main.cpp:check:47] nav-28 is SAFE
01:45:24 [main.cpp:check:43] checking nav-29
01:45:25 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:45:25 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:45:25 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:45:25 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:45:25 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:45:25 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:45:25 [main.cpp:check:47] nav-29 is SAFE
01:45:25 [main.cpp:check:43] checking nav-30
01:45:25 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:45:25 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:45:25 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:45:25 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:45:26 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:45:26 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:45:26 [main.cpp:check:47] nav-30 is SAFE
01:45:26 [main.cpp:check:43] checking nav-31
01:45:26 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:45:26 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:45:26 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:45:26 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:45:26 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:45:26 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:45:26 [main.cpp:check:47] nav-31 is SAFE
01:45:26 [main.cpp:check:43] checking nav-32
01:45:27 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:45:27 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:45:27 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:45:27 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:45:27 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:45:27 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:45:27 [main.cpp:check:47] nav-32 is SAFE
01:45:27 [main.cpp:check:43] checking nav-33
01:45:27 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:45:27 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:45:27 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:45:27 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:45:28 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:45:28 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:45:28 [main.cpp:check:47] nav-33 is SAFE
01:45:28 [main.cpp:check:43] checking nav-34
01:45:28 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:45:28 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:45:28 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:45:28 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:45:28 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:45:28 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:45:28 [main.cpp:check:47] nav-34 is SAFE
01:45:28 [main.cpp:check:43] checking 1-flow
01:45:28 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:45:28 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:45:28 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:45:28 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:45:28 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:45:28 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:45:28 [main.cpp:check:47] 1-flow is SAFE
01:45:28 [main.cpp:check:43] checking circuit
01:45:28 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:45:28 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:45:28 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:45:28 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:45:28 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:45:28 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 0
01:45:28 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 2
01:45:28 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 2
01:45:28 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:45:28 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:45:28 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 1
01:45:28 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? UNSAFE)
01:45:28 [main.cpp:check:48] circuit is UNSAFE
01:45:28 [main.cpp:check:43] checking clock
01:45:28 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:45:28 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:45:28 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 0] splitting invariant on x1==3 when range is [1,5]
01:45:28 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 1] splitting invariant on x2==3 when range is [1,5]
01:45:28 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 0] splitting invariant on x2==3 when range is [1,5]
01:45:28 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 3] splitting invariant on x1==4 when range is [3,5]
01:45:28 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 2] splitting invariant on x1==2 when range is [1,3]
01:45:28 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 1] splitting invariant on x1==2 when range is [1,3]
01:45:28 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 0] splitting invariant on x1==4 when range is [3,5]
01:45:28 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 7] splitting invariant on x2==4 when range is [3,5]
01:45:28 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 6] splitting invariant on x2==4 when range is [3,5]
01:45:28 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 5] splitting invariant on x2==2 when range is [1,3]
01:45:28 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 4] splitting invariant on x2==2 when range is [1,3]
01:45:28 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 3] splitting invariant on x2==2 when range is [1,3]
01:45:28 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 2] splitting invariant on x2==2 when range is [1,3]
01:45:28 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 1] splitting invariant on x2==4 when range is [3,5]
01:45:29 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 0] splitting invariant on x2==4 when range is [3,5]
01:45:29 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:45:29 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:45:29 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:45:29 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:45:29 [main.cpp:check:47] clock is SAFE
01:45:29 [main.cpp:check:43] checking convoi-1
01:45:29 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:45:29 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:45:29 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:45:29 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:45:29 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:45:29 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:45:29 [main.cpp:check:47] convoi-1 is SAFE
01:45:29 [main.cpp:check:43] checking cycle
01:45:29 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:45:29 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:45:29 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:45:29 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:45:29 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:45:29 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:45:29 [main.cpp:check:47] cycle is SAFE
01:45:29 [main.cpp:check:43] checking fischer2
01:45:29 [nlfpoly_ha_safety_checker.hpp:bound_cont_transitions:233] Continuous transitions are not explicitly bounded. If a counterexample is found, it is possible that model checker refute it incorrectly. If no counterexample is found, this warning can be ignored.
01:45:29 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:45:29 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:45:29 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:45:30 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:45:30 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:45:30 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:45:30 [main.cpp:check:47] fischer2 is SAFE
01:45:30 [main.cpp:check:43] checking fischer3
01:45:30 [nlfpoly_ha_safety_checker.hpp:bound_cont_transitions:233] Continuous transitions are not explicitly bounded. If a counterexample is found, it is possible that model checker refute it incorrectly. If no counterexample is found, this warning can be ignored.
01:45:30 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:45:30 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:45:30 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:45:31 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:45:32 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:45:32 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:45:32 [main.cpp:check:47] fischer3 is SAFE
01:45:33 [main.cpp:check:43] checking focus
01:45:33 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:45:33 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:45:33 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:45:33 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:45:33 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:45:33 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 0
01:45:33 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 0
01:45:33 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 0
01:45:33 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:45:33 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:45:33 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:45:33 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 0
01:45:33 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 0] splitting invariant on y==2 when range is [0,4]
01:45:33 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:45:33 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:45:33 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:45:33 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 0
01:45:33 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 1
01:45:33 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 0
01:45:33 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:45:33 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:45:33 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:45:33 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 1
01:45:33 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 1] splitting invariant on x==2 when range is [0,4]
01:45:33 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:45:33 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:45:33 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:45:33 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 1
01:45:33 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 1 --> 0
01:45:33 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 0 --> 0
01:45:33 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:45:33 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:45:33 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:45:33 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:45:33 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 1
01:45:33 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 0
01:45:33 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 0] splitting invariant on x==2 when range is [0,4]
01:45:33 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:45:33 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:45:34 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:45:34 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 1
01:45:34 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 1 --> 0
01:45:34 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 0 --> 0
01:45:34 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:45:34 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:45:34 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:45:34 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:45:34 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:45:34 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 1
01:45:34 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 1] splitting invariant on y==1 when range is [0,2]
01:45:34 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:45:34 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:45:34 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:45:34 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:45:34 [main.cpp:check:47] focus is SAFE
01:45:34 [main.cpp:check:43] checking navigation-old
01:45:34 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:45:34 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:45:34 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:45:34 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:45:34 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:45:34 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:45:34 [main.cpp:check:47] navigation-old is SAFE
01:45:34 [main.cpp:check:43] checking navigation
01:45:34 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:45:34 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:45:34 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:45:34 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:45:34 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:45:34 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 2
01:45:34 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 4 --> 3 --> 2
01:45:34 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 4 --> 3 --> 2
01:45:34 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 3 -u 3 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:45:35 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:45:35 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:45:35 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:45:35 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:45:35 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:45:35 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 1
01:45:35 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 3
01:45:35 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 3] splitting invariant on vy==0 when range is [-2,2]
01:45:35 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:45:35 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:45:35 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:45:35 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 2
01:45:35 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 4 --> 7 --> 2
01:45:35 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 4 --> 3 --> 2
01:45:35 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 3 -u 3 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:45:35 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:45:35 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:45:36 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:45:36 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:45:36 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:45:36 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 1
01:45:36 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 7
01:45:36 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 7] splitting invariant on vx==0 when range is [-2,2]
01:45:36 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:45:36 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:45:36 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:45:36 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 2
01:45:36 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 4 --> 3 --> 2
01:45:36 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 4 --> 3 --> 2
01:45:36 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 3 -u 3 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:45:36 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:45:36 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:45:36 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:45:36 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 1 -u 1 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:45:36 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:45:36 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 0
01:45:36 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 4
01:45:36 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 4] splitting invariant on vy==0 when range is [-2,2]
01:45:36 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:45:37 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:45:37 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:45:37 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 2
01:45:37 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 9 --> 8 --> 0
01:45:37 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 4 --> 3 --> 0
01:45:37 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 3 -u 3 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:45:37 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:45:37 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:45:37 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:45:37 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 2
01:45:37 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 0
01:45:37 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 0] splitting invariant on vy==0 when range is [-2,2]
01:45:37 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:45:38 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:45:38 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? UNSAFE)
01:45:38 [nlfpoly_ha_safety_checker.hpp:check_safety:648] counter-example length (number of edges): 2
01:45:38 [nlfpoly_ha_safety_checker.hpp:check_safety:649] abst-CE: 9 --> 8 --> 10
01:45:38 [nlfpoly_ha_safety_checker.hpp:check_safety:650] conc-CE: 4 --> 3 --> 0
01:45:38 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 3 -u 3 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:45:38 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:45:38 [utils_dreach.hpp:longest_valid_prefix:533] /opt/dReal-3.16.06.02/bin/dReach -l 2 -u 2 ./ws/n1/dreach.drh > ./ws/n1/dreach.out
01:45:38 [utils_dreach.hpp:longest_valid_prefix:536] dReach return code: 0
01:45:38 [nlfpoly_ha_safety_checker.hpp:check_safety:664] max valid index: 2
01:45:38 [nlfpoly_ha_safety_checker.hpp:check_safety:681] splitting location: 10
01:45:38 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 10] splitting invariant on vx==0 when range is [-2,2]
01:45:38 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:45:38 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:45:43 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:45:43 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:45:43 [main.cpp:check:47] navigation is SAFE
01:45:43 [main.cpp:check:43] checking real-eigen
01:45:43 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:45:43 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:45:43 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:45:43 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:45:43 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:45:43 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:45:43 [main.cpp:check:47] real-eigen is SAFE
01:45:43 [main.cpp:check:43] checking sinusoid
01:45:43 [nlfpoly_ha_safety_checker.hpp:bound_cont_transitions:233] Continuous transitions are not explicitly bounded. If a counterexample is found, it is possible that model checker refute it incorrectly. If no counterexample is found, this warning can be ignored.
01:45:43 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:45:43 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:45:43 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 0] splitting invariant on t==5 when range is [0,10]
01:45:43 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 1] splitting invariant on t==5/2 when range is [0,5]
01:45:43 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 0] splitting invariant on t==15/2 when range is [5,10]
01:45:43 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 3] splitting invariant on t==25/4 when range is [5,15/2]
01:45:43 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 2] splitting invariant on t==5/4 when range is [0,5/2]
01:45:43 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 1] splitting invariant on t==15/4 when range is [5/2,5]
01:45:43 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 0] splitting invariant on t==35/4 when range is [15/2,10]
01:45:43 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 7] splitting invariant on t==65/8 when range is [15/2,35/4]
01:45:43 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 6] splitting invariant on t==25/8 when range is [5/2,15/4]
01:45:43 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 5] splitting invariant on t==5/8 when range is [0,5/4]
01:45:43 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 4] splitting invariant on t==45/8 when range is [5,25/4]
01:45:43 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 3] splitting invariant on t==55/8 when range is [25/4,15/2]
01:45:43 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 2] splitting invariant on t==15/8 when range is [5/4,5/2]
01:45:43 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 1] splitting invariant on t==35/8 when range is [15/4,5]
01:45:43 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 0] splitting invariant on t==75/8 when range is [35/4,10]
01:45:43 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 15] splitting invariant on t==145/16 when range is [35/4,75/8]
01:45:43 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 14] splitting invariant on t==65/16 when range is [15/4,35/8]
01:45:43 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 13] splitting invariant on t==25/16 when range is [5/4,15/8]
01:45:43 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 12] splitting invariant on t==105/16 when range is [25/4,55/8]
01:45:43 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 11] splitting invariant on t==85/16 when range is [5,45/8]
01:45:43 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 10] splitting invariant on t==5/16 when range is [0,5/8]
01:45:43 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 9] splitting invariant on t==45/16 when range is [5/2,25/8]
01:45:43 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 8] splitting invariant on t==125/16 when range is [15/2,65/8]
01:45:43 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 7] splitting invariant on t==135/16 when range is [65/8,35/4]
01:45:43 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 6] splitting invariant on t==55/16 when range is [25/8,15/4]
01:45:43 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 5] splitting invariant on t==15/16 when range is [5/8,5/4]
01:45:43 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 4] splitting invariant on t==95/16 when range is [45/8,25/4]
01:45:43 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 3] splitting invariant on t==115/16 when range is [55/8,15/2]
01:45:43 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 2] splitting invariant on t==35/16 when range is [15/8,5/2]
01:45:43 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 1] splitting invariant on t==75/16 when range is [35/8,5]
01:45:43 [nlfpoly_ha_safety_checker.hpp:operator():377] [ha_index,loc_index]=[0, 0] splitting invariant on t==155/16 when range is [75/8,10]
01:45:43 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:45:43 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:45:44 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:45:44 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:45:44 [main.cpp:check:47] sinusoid is SAFE
01:45:44 [main.cpp:check:43] checking trivial-hard
01:45:44 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:45:44 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:45:44 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:45:44 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:45:44 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:45:44 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:45:44 [main.cpp:check:47] trivial-hard is SAFE
01:45:44 [main.cpp:check:43] checking van-der-pole
01:45:44 [nlfpoly_ha_safety_checker.hpp:safety_checker:132] starting initialization of nlfpoly-ha safety checker
01:45:44 [nlfpoly_ha_safety_checker.hpp:safety_checker:136] starting nlfpoly-ha cegar loop
01:45:44 [poly_ha_safety_checker.hpp:safety_checker:115] starting initialization of poly-ha safety checker
01:45:44 [poly_ha_safety_checker.hpp:safety_checker:126] starting poly-ha reachable set computation
01:45:44 [poly_ha_safety_checker.hpp:safety_checker:134] reached to a fixed-point or an unsafe state in poly-ha (safety_result? SAFE)
01:45:44 [nlfpoly_ha_safety_checker.hpp:safety_checker:142] cegar loop in nlfpoly safety checker terminated (safety_result? SAFE)
01:45:44 [main.cpp:check:47] van-der-pole is SAFE
row | name           | mc-nlfp | mc-nlfpol | mc-nlfpo | mc-nlfpol | mc-nlfpol | mc-nlfpo | mc-dr | mc-pol | mc-poly | mc-poly- | mc-poly- | mc-poly-u | mc-poly-i | mc-poly-r | safety | mc-nlfp | poly- | poly-init | poly-unsa | poly-un | poly-triv | mc-pol | mc-pol | mc-pol | mc-poly-su | mc-poly- | mc-poly | mc-poly | mc-poly-r | mc-poly-r | mc-poly-n | mc-nlfpo | mc-poly | mc-poly | mc-poly-s | mc-poly-che
    |                | oly-tot | y-initial | ly-reach | y-abstrac | y-refinem | ly-ce-ch | each- | y-tota | -fixpoi | cont-pos | dist-pos | nsafe-che | nitializa | eachabili | -parse | oly-ite | dimen | -polyhedr | fe-polyhe | safe-lo | ial-unsaf | y-iter | y-cont | y-disc | ccessful-d | fixpoint | -fixpoi | -unsafe | eached-lo | eached-ed | onempty-e | ly-safet | -safty_ | -invers | eparated- | ck-unsafe-a
    |                | al-time | ization   | ability  | tion-time | ent-time  | eck-time | time  | l-time | nt-time | t-time   | t-time   | ck-time   | tion-time | ty-time   | -time  | rations | sion  | a-count   | dra-count | c-count | e-count   | ations | -posts | -posts | isc-posts  | -checks  | nt-hits | -checks | c-count   | ge-count  | dge-count | y_result | result  | ed-time | id-resets | fter-disc  
  1 | tank-01        | 0       | 0         | 0        | 0         | 0         | 0        | 0     | 255    | 65      | 0        | 42       | 12        | 103       | 152       | 1      | 0       | 3     | 3         | 3         | 3       | 0         | 5      | 46     | 90     | 90         | 48       | 2       | 46      | 3         | 6         | 6         | UNKNOWN  | UNSAFE  | true    | true      | false      
  2 | tank-02        | 0       | 0         | 0        | 0         | 0         | 0        | 0     | 256    | 69      | 3        | 43       | 20        | 92        | 164       | 1      | 0       | 3     | 3         | 3         | 3       | 0         | 5      | 49     | 96     | 96         | 50       | 1       | 49      | 3         | 6         | 6         | UNKNOWN  | UNSAFE  | true    | true      | false      
  3 | tank-03        | 0       | 0         | 0        | 0         | 0         | 0        | 0     | 93     | 5       | 0        | 0        | 0         | 88        | 5         | 1      | 0       | 3     | 3         | 3         | 3       | 0         | 1      | 1      | 0      | 0          | 1        | 0       | 1       | 1         | 0         | 0         | UNKNOWN  | UNSAFE  | true    | true      | false      
  4 | tank-04        | 0       | 0         | 0        | 0         | 0         | 0        | 0     | 125    | 16      | 0        | 7        | 3         | 98        | 27        | 1      | 0       | 3     | 3         | 3         | 3       | 0         | 2      | 9      | 16     | 16         | 9        | 0       | 9       | 3         | 6         | 6         | UNKNOWN  | UNSAFE  | true    | true      | false      
  5 | tank-06        | 0       | 0         | 0        | 0         | 0         | 0        | 0     | 134    | 16      | 2        | 7        | 5         | 101       | 33        | 1      | 0       | 3     | 3         | 3         | 3       | 0         | 3      | 17     | 32     | 32         | 17       | 0       | 17      | 3         | 6         | 6         | UNKNOWN  | UNSAFE  | true    | true      | false      
  6 | tank-07        | 0       | 0         | 0        | 0         | 0         | 0        | 0     | 123    | 16      | 0        | 3        | 2         | 99        | 24        | 1      | 0       | 3     | 3         | 3         | 3       | 0         | 3      | 11     | 13     | 13         | 11       | 0       | 11      | 3         | 4         | 4         | UNKNOWN  | UNSAFE  | true    | true      | false      
  7 | tank-08        | 0       | 0         | 0        | 0         | 0         | 0        | 0     | 132    | 18      | 0        | 6        | 3         | 99        | 33        | 2      | 0       | 3     | 3         | 3         | 3       | 0         | 3      | 9      | 11     | 11         | 9        | 0       | 9       | 3         | 4         | 4         | UNKNOWN  | UNSAFE  | true    | true      | false      
  8 | tank-09        | 0       | 0         | 0        | 0         | 0         | 0        | 0     | 180    | 35      | 0        | 9        | 5         | 125       | 55        | 2      | 0       | 4     | 4         | 4         | 4       | 0         | 6      | 21     | 32     | 32         | 33       | 12      | 21      | 4         | 6         | 6         | UNKNOWN  | UNSAFE  | false   | true      | false      
  9 | tank-10        | 0       | 0         | 0        | 0         | 0         | 0        | 0     | 120    | 17      | 0        | 3        | 1         | 99        | 21        | 1      | 0       | 3     | 3         | 3         | 3       | 0         | 2      | 5      | 5      | 5          | 5        | 0       | 5       | 3         | 4         | 4         | UNKNOWN  | UNSAFE  | true    | true      | false      
 10 | tank-11        | 0       | 0         | 0        | 0         | 0         | 0        | 0     | 203    | 26      | 1        | 8        | 1         | 163       | 40        | 2      | 0       | 4     | 4         | 4         | 4       | 0         | 4      | 12     | 17     | 11         | 12       | 0       | 12      | 4         | 6         | 6         | UNKNOWN  | UNSAFE  | false   | true      | false      
 11 | tank-12        | 0       | 0         | 0        | 0         | 0         | 0        | 0     | 425    | 110     | 1        | 55       | 23        | 196       | 229       | 4      | 0       | 5     | 5         | 5         | 5       | 0         | 5      | 86     | 144    | 144        | 86       | 0       | 86      | 5         | 8         | 8         | UNKNOWN  | UNSAFE  | true    | true      | false      
 12 | tank-13        | 0       | 0         | 0        | 0         | 0         | 0        | 0     | 375    | 52      | 2        | 44       | 7         | 252       | 123       | 6      | 0       | 6     | 6         | 6         | 6       | 0         | 6      | 32     | 54     | 46         | 39       | 7       | 32      | 6         | 10        | 10        | UNKNOWN  | UNSAFE  | false   | true      | false      
 13 | tank-14        | 0       | 0         | 0        | 0         | 0         | 0        | 0     | 520    | 100     | 3        | 97       | 19        | 266       | 254       | 6      | 0       | 7     | 7         | 7         | 7       | 0         | 7      | 54     | 97     | 87         | 69       | 15      | 54      | 7         | 12        | 12        | UNKNOWN  | UNSAFE  | false   | true      | false      
 14 | tank-15        | 0       | 0         | 0        | 0         | 0         | 0        | 0     | 4262   | 914     | 12       | 2059     | 140       | 339       | 3923      | 8      | 0       | 8     | 8         | 8         | 8       | 0         | 10     | 168    | 313    | 301        | 207      | 39      | 168     | 8         | 14        | 14        | UNKNOWN  | UNSAFE  | false   | true      | false      
 15 | tank-16        | 0       | 0         | 0        | 0         | 0         | 0        | 0     | 130    | 16      | 0        | 4        | 1         | 108       | 22        | 2      | 0       | 3     | 3         | 3         | 3       | 0         | 1      | 3      | 6      | 0          | 3        | 0       | 3       | 3         | 6         | 6         | UNKNOWN  | SAFE    | true    | true      | false      
 16 | tank-17        | 0       | 0         | 0        | 0         | 0         | 0        | 0     | 136    | 15      | 0        | 3        | 0         | 116       | 20        | 1      | 0       | 3     | 3         | 3         | 3       | 0         | 2      | 3      | 6      | 2          | 5        | 2       | 3       | 3         | 6         | 6         | UNKNOWN  | SAFE    | true    | true      | false      
 17 | sat-01         | 253     | 48        | 205      | 41        | 0         | 0        | 0     | 205    | 41      | 2        | 76       | 0         | 81        | 124       | 29     | 1       | 5     | 1         | 2         | 2       | 0         | 5      | 12     | 22     | 22         | 23       | 11      | 12      | 4         | 16        | 9         | SAFE     | SAFE    | false   | true      | false      
 18 | sat-02         | 254     | 48        | 206      | 40        | 0         | 0        | 0     | 206    | 41      | 6        | 73       | 0         | 84        | 122       | 34     | 1       | 5     | 1         | 2         | 2       | 0         | 5      | 12     | 22     | 22         | 23       | 11      | 12      | 4         | 16        | 9         | SAFE     | SAFE    | false   | true      | false      
 19 | sat-03         | 232     | 38        | 194      | 25        | 0         | 0        | 0     | 194    | 70      | 1        | 77       | 0         | 45        | 149       | 51     | 1       | 5     | 1         | 1         | 1       | 0         | 12     | 20     | 76     | 38         | 39       | 19      | 20      | 10        | 40        | 38        | SAFE     | SAFE    | false   | true      | false      
 20 | sat-04         | 193     | 128       | 65       | 106       | 0         | 0        | 0     | 65     | 7       | 0        | 11       | 0         | 47        | 18        | 83     | 1       | 5     | 1         | 1         | 1       | 0         | 3      | 2      | 2      | 2          | 3        | 1       | 2       | 1         | 4         | 1         | SAFE     | SAFE    | false   | true      | false      
 21 | sat-05         | 193     | 124       | 69       | 103       | 0         | 0        | 0     | 69     | 8       | 0        | 9        | 0         | 51        | 18        | 83     | 1       | 5     | 1         | 1         | 1       | 0         | 3      | 2      | 2      | 2          | 3        | 1       | 2       | 1         | 4         | 1         | SAFE     | SAFE    | false   | true      | false      
 22 | sat-06         | 285     | 210       | 75       | 175       | 0         | 0        | 0     | 75     | 7       | 0        | 7        | 0         | 56        | 19        | 127    | 1       | 5     | 1         | 1         | 1       | 0         | 3      | 2      | 2      | 2          | 3        | 1       | 2       | 1         | 4         | 1         | SAFE     | SAFE    | false   | true      | false      
 23 | sat-07         | 628     | 418       | 210      | 348       | 0         | 0        | 0     | 210    | 55      | 4        | 68       | 0         | 71        | 139       | 247    | 1       | 5     | 1         | 1         | 1       | 0         | 29     | 28     | 28     | 28         | 29       | 1       | 28      | 1         | 4         | 1         | SAFE     | SAFE    | false   | true      | false      
 24 | sat-08         | 1118    | 854       | 264      | 740       | 0         | 0        | 0     | 264    | 69      | 1        | 76       | 0         | 114       | 150       | 424    | 1       | 5     | 9         | 1         | 1       | 0         | 2      | 9      | 9      | 9          | 18       | 9       | 9       | 9         | 36        | 9         | SAFE     | SAFE    | false   | true      | false      
 25 | sat-09         | 1139    | 924       | 215      | 787       | 0         | 0        | 0     | 215    | 21      | 2        | 29       | 0         | 163       | 52        | 541    | 1       | 5     | 3         | 2         | 2       | 0         | 2      | 3      | 3      | 3          | 6        | 3       | 3       | 3         | 12        | 3         | SAFE     | SAFE    | false   | true      | false      
 26 | sat-10         | 1137    | 929       | 208      | 785       | 0         | 0        | 0     | 208    | 23      | 1        | 25       | 0         | 157       | 51        | 539    | 1       | 5     | 3         | 2         | 2       | 0         | 2      | 3      | 3      | 3          | 6        | 3       | 3       | 3         | 12        | 3         | SAFE     | SAFE    | false   | true      | false      
 27 | sat-11         | 891     | 780       | 111      | 631       | 0         | 0        | 0     | 111    | 9       | 1        | 11       | 0         | 90        | 21        | 468    | 1       | 5     | 1         | 1         | 1       | 0         | 3      | 2      | 2      | 2          | 3        | 1       | 2       | 1         | 4         | 1         | SAFE     | SAFE    | false   | true      | false      
 28 | sat-12         | 844     | 737       | 107      | 614       | 0         | 0        | 0     | 107    | 7       | 0        | 9        | 0         | 89        | 18        | 446    | 1       | 5     | 1         | 1         | 1       | 0         | 3      | 2      | 2      | 2          | 3        | 1       | 2       | 1         | 4         | 1         | SAFE     | SAFE    | false   | true      | false      
 29 | sat-13         | 859     | 736       | 123      | 615       | 0         | 0        | 0     | 123    | 9       | 0        | 12       | 0         | 102       | 21        | 447    | 1       | 5     | 1         | 1         | 1       | 0         | 3      | 2      | 2      | 2          | 3        | 1       | 2       | 1         | 4         | 1         | SAFE     | SAFE    | false   | true      | false      
 30 | sat-14         | 2130    | 1719      | 411      | 1453      | 0         | 0        | 0     | 411    | 104     | 3        | 119      | 0         | 180       | 231       | 996    | 1       | 5     | 16        | 1         | 1       | 0         | 3      | 21     | 21     | 21         | 37       | 16      | 21      | 16        | 70        | 16        | SAFE     | SAFE    | false   | true      | false      
 31 | sat-15         | 1909    | 1680      | 229      | 1396      | 0         | 0        | 0     | 229    | 8       | 0        | 9        | 0         | 212       | 17        | 1056   | 1       | 5     | 1         | 2         | 2       | 0         | 3      | 2      | 2      | 2          | 3        | 1       | 2       | 1         | 4         | 1         | SAFE     | SAFE    | false   | true      | false      
 32 | heater-02      | 941     | 4         | 937      | 3         | 27        | 325      | 320   | 561    | 23      | 1        | 18       | 4         | 503       | 58        | 2      | 3       | 4     | 4         | 4         | 12      | 0         | 3      | 4      | 6      | 5          | 4        | 0       | 4       | 2         | 6         | 6         | UNSAFE   | UNSAFE  | false   | true      | false      
 33 | heater-03      | 50047   | 4         | 50043    | 4         | 0         | 0        | 0     | 30865  | 21861   | 30       | 7367     | 169       | 1236      | 29629     | 2      | 1       | 4     | 1         | 32        | 32      | 0         | 10     | 294    | 7313   | 3418       | 3419     | 3125    | 294     | 40        | 994       | 994       | SAFE     | SAFE    | false   | true      | false      
 34 | heater-04      | 980573  | 3         | 980570   | 3         | 794       | 6634     | 6494  | 971762 | 868341  | 423      | 92280    | 2625      | 5133      | 966629    | 3      | 28      | 4     | 4         | 4         | 112     | 0         | 73     | 3588   | 49567  | 31753      | 20980    | 17392   | 3588    | 31        | 3955      | 3955      | SAFE     | SAFE    | false   | true      | false      
 35 | heater-05      | 62876   | 4         | 62872    | 3         | 1262      | 7097     | 6963  | 52448  | 15922   | 150      | 28700    | 356       | 6380      | 46066     | 2      | 38      | 4     | 4         | 4         | 152     | 0         | 80     | 1189   | 17591  | 12112      | 4718     | 3529    | 1189    | 37        | 7198      | 7198      | SAFE     | SAFE    | false   | true      | false      
 36 | heater-09      | 54897   | 4         | 54893    | 3         | 267       | 2408     | 2368  | 51803  | 41156   | 62       | 7515     | 187       | 2532      | 49271     | 3      | 15      | 4     | 4         | 4         | 60      | 0         | 33     | 514    | 5268   | 4438       | 3918     | 3404    | 514     | 18        | 743       | 743       | SAFE     | SAFE    | false   | true      | false      
 37 | heater-12      | 912     | 5         | 907      | 4         | 27        | 283      | 279   | 564    | 22      | 1        | 14       | 4         | 508       | 56        | 3      | 3       | 4     | 4         | 4         | 12      | 0         | 3      | 4      | 5      | 5          | 4        | 0       | 4       | 2         | 5         | 5         | UNSAFE   | UNSAFE  | false   | true      | false      
 38 | nav-01         | 29081   | 50        | 29031    | 43        | 384       | 11717    | 11479 | 16190  | 4185    | 172      | 10554    | 8         | 520       | 15670     | 18     | 11      | 5     | 4         | 1         | 11      | 0         | 87     | 1195   | 8030   | 7156       | 6771     | 5576    | 1195    | 4         | 1515      | 1515      | SAFE     | SAFE    | false   | true      | false      
 39 | nav-02         | 856     | 34        | 822      | 27        | 0         | 174      | 167   | 648    | 163     | 25       | 382      | 0         | 49        | 599       | 16     | 1       | 5     | 1         | 1         | 1       | 0         | 5      | 89     | 366    | 366        | 141      | 52      | 89      | 14        | 56        | 56        | UNSAFE   | UNSAFE  | false   | true      | false      
 40 | nav-03         | 27619   | 22        | 27597    | 17        | 0         | 24331    | 24316 | 3266   | 770     | 51       | 2276     | 1         | 49        | 3217      | 11     | 1       | 5     | 1         | 1         | 1       | 0         | 7      | 235    | 965    | 965        | 523      | 288     | 235     | 16        | 61        | 61        | UNSAFE   | UNSAFE  | false   | true      | false      
 41 | nav-04         | 5572    | 4         | 5568     | 4         | 105       | 2430     | 2384  | 2904   | 604     | 14       | 1587     | 27        | 541       | 2363      | 2      | 6       | 5     | 1         | 4         | 12      | 0         | 28     | 167    | 937    | 913        | 669      | 502     | 167     | 9         | 203       | 203       | SAFE     | SAFE    | true    | true      | false      
 42 | nav-05         | 2209    | 14        | 2195     | 11        | 34        | 1138     | 1115  | 956    | 182     | 16       | 573      | 1         | 142       | 814       | 6      | 3       | 5     | 1         | 1         | 3       | 0         | 13     | 73     | 283    | 265        | 88       | 15      | 73      | 1         | 65        | 65        | SAFE     | SAFE    | false   | true      | false      
 43 | nav-06         | 7251    | 12        | 7239     | 10        | 118       | 3306     | 3237  | 3608   | 660     | 68       | 2380     | 4         | 314       | 3293      | 6      | 7       | 5     | 3         | 1         | 7       | 0         | 33     | 288    | 1533   | 1318       | 529      | 241     | 288     | 3         | 304       | 304       | SAFE     | SAFE    | false   | true      | false      
 44 | nav-07         | 25979   | 34        | 25945    | 31        | 0         | 25768    | 25763 | 177    | 36      | 1        | 84       | 0         | 40        | 137       | 11     | 1       | 5     | 1         | 1         | 1       | 0         | 3      | 7      | 22     | 22         | 7        | 0       | 7       | 6         | 19        | 19        | UNSAFE   | UNSAFE  | false   | true      | false      
 45 | nav-08         | 163     | 22        | 141      | 17        | 0         | 0        | 0     | 141    | 30      | 4        | 57       | 0         | 50        | 91        | 11     | 1       | 5     | 1         | 1         | 1       | 0         | 5      | 10     | 38     | 21         | 22       | 12      | 10      | 4         | 16        | 16        | SAFE     | SAFE    | false   | true      | false      
 46 | nav-09         | 440     | 21        | 419      | 17        | 0         | 0        | 0     | 419    | 122     | 11       | 226      | 0         | 44        | 375       | 11     | 1       | 5     | 1         | 1         | 1       | 0         | 11     | 61     | 242    | 164        | 165      | 104     | 61      | 8         | 32        | 32        | SAFE     | SAFE    | false   | true      | false      
 47 | nav-10         | 226     | 13        | 213      | 12        | 0         | 0        | 0     | 213    | 51      | 1        | 102      | 0         | 50        | 163       | 6      | 1       | 5     | 1         | 1         | 1       | 0         | 6      | 16     | 60     | 31         | 32       | 16      | 16      | 4         | 14        | 14        | SAFE     | SAFE    | true    | true      | false      
 48 | nav-11         | 227     | 14        | 213      | 12        | 0         | 0        | 0     | 213    | 54      | 0        | 102      | 0         | 49        | 164       | 5      | 1       | 5     | 1         | 1         | 1       | 0         | 6      | 16     | 60     | 31         | 32       | 16      | 16      | 4         | 14        | 14        | SAFE     | SAFE    | true    | true      | false      
 49 | nav-12         | 222     | 13        | 209      | 11        | 0         | 0        | 0     | 209    | 52      | 0        | 102      | 0         | 49        | 160       | 5      | 1       | 5     | 1         | 1         | 1       | 0         | 6      | 16     | 60     | 31         | 32       | 16      | 16      | 4         | 14        | 14        | SAFE     | SAFE    | true    | true      | false      
 50 | nav-13         | 222     | 12        | 210      | 11        | 0         | 0        | 0     | 210    | 50      | 3        | 99       | 0         | 51        | 159       | 6      | 1       | 5     | 1         | 1         | 1       | 0         | 6      | 16     | 60     | 31         | 32       | 16      | 16      | 4         | 14        | 14        | SAFE     | SAFE    | true    | true      | false      
 51 | nav-14         | 219     | 13        | 206      | 11        | 0         | 0        | 0     | 206    | 49      | 0        | 101      | 0         | 48        | 158       | 5      | 1       | 5     | 1         | 1         | 1       | 0         | 6      | 16     | 60     | 31         | 32       | 16      | 16      | 4         | 14        | 14        | SAFE     | SAFE    | true    | true      | false      
 52 | nav-15         | 226     | 12        | 214      | 11        | 0         | 0        | 0     | 214    | 54      | 1        | 102      | 0         | 50        | 164       | 5      | 1       | 5     | 1         | 1         | 1       | 0         | 6      | 16     | 60     | 31         | 32       | 16      | 16      | 4         | 14        | 14        | SAFE     | SAFE    | true    | true      | false      
 53 | nav-16         | 1275    | 13        | 1262     | 11        | 0         | 0        | 0     | 1262   | 290     | 2        | 898      | 0         | 46        | 1216      | 6      | 1       | 5     | 1         | 1         | 1       | 0         | 10     | 35     | 127    | 73         | 74       | 39      | 35      | 5         | 18        | 18        | SAFE     | SAFE    | false   | true      | false      
 54 | nav-17         | 1289    | 13        | 1276     | 11        | 0         | 0        | 0     | 1276   | 282     | 8        | 914      | 0         | 46        | 1230      | 6      | 1       | 5     | 1         | 1         | 1       | 0         | 10     | 35     | 127    | 76         | 77       | 42      | 35      | 5         | 18        | 18        | SAFE     | SAFE    | false   | true      | false      
 55 | nav-18         | 1302    | 14        | 1288     | 12        | 0         | 0        | 0     | 1288   | 296     | 10       | 917      | 0         | 46        | 1242      | 6      | 1       | 5     | 1         | 1         | 1       | 0         | 10     | 35     | 127    | 79         | 80       | 45      | 35      | 5         | 18        | 18        | SAFE     | SAFE    | false   | true      | false      
 56 | nav-19         | 1212    | 13        | 1199     | 11        | 0         | 0        | 0     | 1199   | 264     | 6        | 862      | 0         | 42        | 1157      | 6      | 1       | 5     | 1         | 1         | 1       | 0         | 10     | 35     | 127    | 73         | 74       | 39      | 35      | 5         | 18        | 18        | SAFE     | SAFE    | false   | true      | false      
 57 | nav-20         | 1218    | 10        | 1208     | 9         | 0         | 0        | 0     | 1208   | 264     | 4        | 873      | 0         | 38        | 1170      | 5      | 1       | 5     | 1         | 1         | 1       | 0         | 10     | 35     | 127    | 76         | 77       | 42      | 35      | 5         | 18        | 18        | SAFE     | SAFE    | false   | true      | false      
 58 | nav-21         | 1243    | 12        | 1231     | 11        | 0         | 0        | 0     | 1231   | 281     | 4        | 872      | 0         | 48        | 1183      | 6      | 1       | 5     | 1         | 1         | 1       | 0         | 10     | 35     | 127    | 79         | 80       | 45      | 35      | 5         | 18        | 18        | SAFE     | SAFE    | false   | true      | false      
 59 | nav-22         | 408     | 52        | 356      | 43        | 0         | 0        | 0     | 356    | 91      | 3        | 197      | 0         | 47        | 309       | 21     | 1       | 5     | 1         | 1         | 1       | 0         | 6      | 33     | 138    | 75         | 76       | 43      | 33      | 8         | 33        | 33        | SAFE     | SAFE    | true    | true      | false      
 60 | nav-23         | 433     | 51        | 382      | 44        | 0         | 0        | 0     | 382    | 97      | 1        | 220      | 0         | 51        | 331       | 24     | 1       | 5     | 1         | 1         | 1       | 0         | 6      | 33     | 138    | 75         | 76       | 43      | 33      | 8         | 33        | 33        | SAFE     | SAFE    | true    | true      | false      
 61 | nav-24         | 427     | 48        | 379      | 39        | 0         | 0        | 0     | 379    | 98      | 4        | 213      | 0         | 50        | 329       | 24     | 1       | 5     | 1         | 1         | 1       | 0         | 6      | 33     | 138    | 75         | 76       | 43      | 33      | 8         | 33        | 33        | SAFE     | SAFE    | true    | true      | false      
 62 | nav-25         | 420     | 52        | 368      | 44        | 0         | 0        | 0     | 368    | 89      | 1        | 212      | 0         | 51        | 317       | 22     | 1       | 5     | 1         | 1         | 1       | 0         | 6      | 33     | 138    | 75         | 76       | 43      | 33      | 8         | 33        | 33        | SAFE     | SAFE    | true    | true      | false      
 63 | nav-26         | 418     | 50        | 368      | 42        | 0         | 0        | 0     | 368    | 99      | 4        | 208      | 0         | 48        | 320       | 21     | 1       | 5     | 1         | 1         | 1       | 0         | 6      | 33     | 138    | 75         | 76       | 43      | 33      | 8         | 33        | 33        | SAFE     | SAFE    | true    | true      | false      
 64 | nav-27         | 418     | 49        | 369      | 42        | 0         | 0        | 0     | 369    | 93      | 2        | 215      | 0         | 47        | 322       | 21     | 1       | 5     | 1         | 1         | 1       | 0         | 6      | 33     | 138    | 75         | 76       | 43      | 33      | 8         | 33        | 33        | SAFE     | SAFE    | true    | true      | false      
 65 | nav-28         | 526     | 136       | 390      | 116       | 0         | 0        | 0     | 390    | 94      | 0        | 212      | 0         | 74        | 316       | 71     | 1       | 5     | 1         | 1         | 1       | 0         | 6      | 33     | 138    | 75         | 76       | 43      | 33      | 8         | 33        | 33        | SAFE     | SAFE    | true    | true      | false      
 66 | nav-29         | 512     | 127       | 385      | 105       | 0         | 0        | 0     | 385    | 94      | 2        | 212      | 0         | 67        | 318       | 67     | 1       | 5     | 1         | 1         | 1       | 0         | 6      | 33     | 138    | 75         | 76       | 43      | 33      | 8         | 33        | 33        | SAFE     | SAFE    | true    | true      | false      
 67 | nav-30         | 511     | 118       | 393      | 99        | 0         | 0        | 0     | 393    | 90      | 3        | 211      | 0         | 74        | 319       | 64     | 1       | 5     | 1         | 1         | 1       | 0         | 6      | 33     | 138    | 75         | 76       | 43      | 33      | 8         | 33        | 33        | SAFE     | SAFE    | true    | true      | false      
 68 | nav-31         | 509     | 123       | 386      | 103       | 0         | 0        | 0     | 386    | 89      | 2        | 208      | 0         | 76        | 310       | 69     | 1       | 5     | 1         | 1         | 1       | 0         | 6      | 33     | 138    | 75         | 76       | 43      | 33      | 8         | 33        | 33        | SAFE     | SAFE    | true    | true      | false      
 69 | nav-32         | 517     | 125       | 392      | 104       | 0         | 0        | 0     | 392    | 97      | 0        | 210      | 0         | 70        | 322       | 67     | 1       | 5     | 1         | 1         | 1       | 0         | 6      | 33     | 138    | 75         | 76       | 43      | 33      | 8         | 33        | 33        | SAFE     | SAFE    | true    | true      | false      
 70 | nav-33         | 516     | 123       | 393      | 106       | 0         | 0        | 0     | 392    | 88      | 5        | 205      | 0         | 78        | 314       | 66     | 1       | 5     | 1         | 1         | 1       | 0         | 6      | 33     | 138    | 75         | 76       | 43      | 33      | 8         | 33        | 33        | SAFE     | SAFE    | true    | true      | false      
 71 | nav-34         | 250     | 48        | 202      | 41        | 0         | 0        | 0     | 202    | 47      | 1        | 99       | 0         | 42        | 160       | 22     | 1       | 5     | 1         | 1         | 1       | 0         | 6      | 16     | 60     | 31         | 32       | 16      | 16      | 4         | 14        | 14        | SAFE     | SAFE    | true    | true      | false      
 72 | 1-flow         | 57      | 1         | 56       | 0         | 0         | 0        | 0     | 56     | 6       | 0        | 4        | 0         | 44        | 12        | 0      | 1       | 4     | 1         | 1         | 1       | 0         | 3      | 2      | 2      | 2          | 3        | 1       | 2       | 1         | 1         | 1         | SAFE     | SAFE    | false   | true      | false      
 73 | circuit        | 318     | 2         | 316      | 2         | 0         | 188      | 187   | 128    | 5       | 0        | 0        | 1         | 120       | 8         | 1      | 1       | 3     | 1         | 8         | 3       | 0         | 1      | 1      | 0      | 0          | 1        | 0       | 1       | 1         | 0         | 0         | UNSAFE   | UNSAFE  | false   | true      | false      
 74 | clock          | 802     | 1         | 801      | 1         | 0         | 0        | 0     | 599    | 229     | 2        | 236      | 12        | 89        | 510       | 1      | 1       | 4     | 1         | 2         | 2       | 0         | 8      | 48     | 276    | 196        | 197      | 149     | 48      | 9         | 56        | 56        | SAFE     | SAFE    | true    | true      | false      
 75 | convoi-1       | 61      | 1         | 60       | 1         | 0         | 0        | 0     | 60     | 8       | 1        | 7        | 3         | 40        | 20        | 1      | 1       | 5     | 1         | 1         | 1       | 0         | 3      | 2      | 2      | 2          | 3        | 1       | 2       | 1         | 1         | 1         | SAFE     | SAFE    | false   | true      | false      
 76 | cycle          | 61      | 1         | 60       | 1         | 0         | 0        | 0     | 60     | 11      | 0        | 4        | 1         | 43        | 17        | 1      | 1       | 3     | 1         | 1         | 1       | 0         | 3      | 2      | 4      | 4          | 5        | 3       | 2       | 2         | 4         | 4         | SAFE     | SAFE    | false   | true      | false      
 77 | fischer2       | 346     | 8         | 338      | 7         | 0         | 0        | 0     | 338    | 126     | 1        | 24       | 0         | 186       | 152       | 11     | 1       | 2     | 1         | 5         | 5       | 0         | 11     | 32     | 56     | 52         | 53       | 21      | 32      | 20        | 36        | 36        | SAFE     | SAFE    | false   | true      | false      
 78 | fischer3       | 2573    | 70        | 2503     | 64        | 0         | 0        | 0     | 2503   | 586     | 16       | 377      | 0         | 1498      | 1005      | 104    | 1       | 3     | 1         | 43        | 43      | 0         | 16     | 300    | 792    | 681        | 682      | 382     | 300     | 80        | 204       | 204       | SAFE     | SAFE    | false   | true      | false      
 79 | focus          | 1250    | 1         | 1249     | 1         | 17        | 516      | 509   | 679    | 46      | 2        | 26       | 5         | 586       | 93        | 0      | 5       | 3     | 1         | 5         | 15      | 0         | 11     | 14     | 38     | 22         | 23       | 9       | 14      | 3         | 19        | 19        | SAFE     | SAFE    | false   | true      | false      
 80 | navigation-old | 180     | 4         | 176      | 4         | 0         | 0        | 0     | 176    | 42      | 0        | 86       | 2         | 44        | 132       | 2      | 1       | 5     | 1         | 1         | 1       | 0         | 5      | 6      | 14     | 14         | 15       | 9       | 6       | 3         | 7         | 7         | SAFE     | SAFE    | false   | true      | false      
 81 | navigation     | 8653    | 8         | 8645     | 7         | 108       | 1705     | 1665  | 6726   | 2576    | 65       | 3181     | 21        | 571       | 6155      | 3      | 6       | 5     | 1         | 4         | 15      | 0         | 25     | 181    | 1220   | 910        | 748      | 567     | 181     | 11        | 230       | 230       | SAFE     | SAFE    | false   | true      | false      
 82 | real-eigen     | 68      | 1         | 67       | 1         | 0         | 0        | 0     | 67     | 11      | 0        | 12       | 4         | 37        | 30        | 1      | 1       | 4     | 1         | 1         | 1       | 0         | 3      | 2      | 2      | 2          | 3        | 1       | 2       | 1         | 1         | 1         | SAFE     | SAFE    | false   | true      | false      
 83 | sinusoid       | 768     | 0         | 768      | 0         | 0         | 0        | 0     | 694    | 429     | 10       | 165      | 3         | 49        | 645       | 1      | 1       | 2     | 64        | 1         | 1       | 0         | 34     | 766    | 1508   | 1158       | 1222     | 456     | 766     | 32        | 62        | 62        | SAFE     | SAFE    | true    | true      | false      
 84 | trivial-hard   | 50      | 0         | 50       | 0         | 0         | 0        | 0     | 50     | 6       | 1        | 1        | 0         | 42        | 8         | 1      | 1       | 3     | 1         | 1         | 1       | 0         | 3      | 2      | 2      | 2          | 3        | 1       | 2       | 1         | 1         | 1         | SAFE     | SAFE    | false   | true      | false      
 85 | van-der-pole   | 132     | 2         | 130      | 2         | 0         | 0        | 0     | 130    | 19      | 1        | 21       | 1         | 86        | 44        | 1      | 1       | 4     | 1         | 2         | 2       | 0         | 5      | 7      | 10     | 10         | 11       | 4       | 7       | 2         | 3         | 3         | SAFE     | SAFE    | false   | true      | false      

real	21m51.223s
user	21m26.276s
sys	0m17.502s
~/Git/Codes/HARE$ 
